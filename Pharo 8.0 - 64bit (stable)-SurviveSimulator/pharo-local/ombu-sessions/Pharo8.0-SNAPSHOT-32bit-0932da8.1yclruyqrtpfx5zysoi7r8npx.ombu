OmEntry {	#tags : {		#author : 'DamjanManojlovic',		#time : DateAndTime [ '2021-06-25T17:42:44.931301+02:00' ],		#prior : OmReference [ 'Pharo8.0-SNAPSHOT-32bit-0932da8.74j3g3idozu9a9xe2h6rwnzle', '29' ],		#self : OmReference [ '1' ]	},	#content : EpCategoryAddition {		#classCategoryName : #'',		#affectedPackageName : #''	}}OmEntry {	#tags : {		#author : 'DamjanManojlovic',		#time : DateAndTime [ '2021-06-25T17:42:44.933301+02:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #SimulationVisualsation\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #SimulationVisualsation,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'SimulationVisualsation class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'SimulationVisualsation class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SimulationVisualsation,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #'',			#package : #'',			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'DamjanManojlovic',		#time : DateAndTime [ '2021-06-25T17:43:44.034301+02:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #SimulationVisualsation\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #SimulationVisualsation,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'SimulationVisualsation class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'SimulationVisualsation class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SimulationVisualsation,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #'',			#package : #'',			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #SimulationVisualsation\r\tinstanceVariableNames: \'size\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #SimulationVisualsation,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SimulationVisualsation,						#isMetaSide : false					},					#name : #size,					#parent : @21				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'SimulationVisualsation class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'SimulationVisualsation class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SimulationVisualsation,					#isMetaSide : false				},				#parent : @21,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #'',			#package : #'',			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'DamjanManojlovic',		#time : DateAndTime [ '2021-06-25T17:43:45.854301+02:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SimulationVisualsation,				#isMetaSide : false			},			#name : #messageSelectorAndArgumentNames,			#protocol : #'as yet unclassified',			#sourceCode : 'messageSelectorAndArgumentNames\r\t| tmp1 tmp2 tmp4 |\r\ttmp1 := RTView new.\r\ttmp1 @ RTDraggableView.\r\ttmp2 := RTSpringLayoutStepping new view: tmp1.\r\ttmp2 after: [ tmp1 canvas camera focusOnCenter ].\r\ttmp1 addAnimation: tmp2.\r\ttmp1 canvas\r\t\taddMenu: \'To the end\'\r\t\t\tcallback:\r\t\t\t\t[ | tmp6 tmp7 tmp9 tmp10 tmp11 tmp12 tmp13 tmp15 tmp17 tmp19 tmp21 tmp23 |\r\t\t\ttmp15 := ZnClient new.\r\t\t\ttmp15\r\t\t\t\turl: \'http://localhost:8080/toTheEnd\';\r\t\t\t\tenforceHttpSuccess: true;\r\t\t\t\taccept: ZnMimeType applicationJson;\r\t\t\t\ttimeout: 1000;\r\t\t\t\tcontentReader: [ :arg1 | NeoJSONReader fromString: arg1 contents ].\r\t\t\ttmp6 := tmp15 get.\r\t\t\tsize := tmp1 elements size.\r\t\t\tsize ~= 0\r\t\t\t\tifTrue: [ tmp7 := size - 1.\r\t\t\t\t\t1 to: tmp7 do: [ :tmp8 | (tmp1 elements at: size - tmp8) remove ].\r\t\t\t\t\ttmp1 elements atRandom remove ].\r\t\t\tTranscript\r\t\t\t\tshow: \'Epoche: \';\r\t\t\t\tshow: (tmp6 at: #currentEpoch);\r\t\t\t\tshow: \'/\'.\r\t\t\ttmp17 := Transcript.\r\t\t\ttmp17\r\t\t\t\tshow: (tmp6 at: #finalEpoch);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of good individuals: \'.\r\t\t\ttmp19 := Transcript.\r\t\t\ttmp19\r\t\t\t\tshow: (tmp6 at: #NumberOfGood);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of bad individuals: \'.\r\t\t\ttmp21 := Transcript.\r\t\t\ttmp21\r\t\t\t\tshow: (tmp6 at: #NumberOfBad);\r\t\t\t\tcr.\r\t\t\ttmp23 := Transcript.\r\t\t\ttmp23\r\t\t\t\tshow: \'-----------------------------------------------\';\r\t\t\t\tcr.\r\t\t\t(tmp6 at: #foodSources)\r\t\t\t\tdo: [ :arg2 | \r\t\t\t\t\t| tmp25 |\r\t\t\t\t\ttmp25 := RTEllipse new.\r\t\t\t\t\ttmp25 size: 30.\r\t\t\t\t\ttmp13 := (tmp25 color: (Color green alpha: 0.4)) element.\r\t\t\t\t\ttmp13\r\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\ttmp1 add: tmp13.\r\t\t\t\t\t(arg2 at: #Occupied) = 0\r\t\t\t\t\t\tifTrue: [ tmp2 addNode: tmp13 ].\r\t\t\t\t\t(arg2 at: #Occupied) = 1\r\t\t\t\t\t\tifTrue: [ | tmp27 |\r\t\t\t\t\t\t\ttmp4 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp4 := Color red ].\r\t\t\t\t\t\t\ttmp27 := RTEllipse new.\r\t\t\t\t\t\t\ttmp27 size: 30.\r\t\t\t\t\t\t\ttmp10 := (tmp27 color: (tmp4 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp10\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp10.\r\t\t\t\t\t\t\ttmp12 := RTLine edgeFrom: tmp10 to: tmp13.\r\t\t\t\t\t\t\ttmp1 add: tmp12.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp13;\r\t\t\t\t\t\t\t\taddNode: tmp10;\r\t\t\t\t\t\t\t\taddEdge: tmp12 ].\r\t\t\t\t\t(arg2 at: #Occupied) = 2\r\t\t\t\t\t\tifTrue: [ | tmp29 tmp31 |\r\t\t\t\t\t\t\ttmp4 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp4 := Color red ].\r\t\t\t\t\t\t\ttmp29 := RTEllipse new.\r\t\t\t\t\t\t\ttmp29 size: 30.\r\t\t\t\t\t\t\ttmp10 := (tmp29 color: (tmp4 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp10\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp10.\r\t\t\t\t\t\t\ttmp4 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 2) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp4 := Color red ].\r\t\t\t\t\t\t\ttmp31 := RTEllipse new.\r\t\t\t\t\t\t\ttmp31 size: 30.\r\t\t\t\t\t\t\ttmp11 := (tmp31 color: (tmp4 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp11\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 5 atRandom @ 5 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp11.\r\t\t\t\t\t\t\ttmp12 := RTLine edgeFrom: tmp10 to: tmp13.\r\t\t\t\t\t\t\ttmp9 := RTLine edgeFrom: tmp11 to: tmp13.\r\t\t\t\t\t\t\ttmp1\r\t\t\t\t\t\t\t\tadd: tmp12;\r\t\t\t\t\t\t\t\tadd: tmp9.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp13;\r\t\t\t\t\t\t\t\taddNode: tmp10;\r\t\t\t\t\t\t\t\taddEdge: tmp12;\r\t\t\t\t\t\t\t\taddNode: tmp11;\r\t\t\t\t\t\t\t\taddEdge: tmp9 ] ].\r\t\t\ttmp1 signalUpdate ];\r\t\taddMenu: \'Next day\'\r\t\t\tcallback:\r\t\t\t\t[ | tmp33 tmp34 tmp36 tmp37 tmp38 tmp39 tmp40 tmp42 tmp44 tmp46 tmp48 tmp50 |\r\t\t\ttmp42 := ZnClient new.\r\t\t\ttmp42\r\t\t\t\turl: \'http://localhost:8080/nextEpoch\';\r\t\t\t\tenforceHttpSuccess: true;\r\t\t\t\taccept: ZnMimeType applicationJson;\r\t\t\t\tcontentReader: [ :arg3 | NeoJSONReader fromString: arg3 contents ].\r\t\t\ttmp33 := tmp42 get.\r\t\t\tsize := tmp1 elements size.\r\t\t\tsize ~= 0\r\t\t\t\tifTrue: [ tmp34 := size - 1.\r\t\t\t\t\t1 to: tmp34 do: [ :tmp35 | (tmp1 elements at: size - tmp35) remove ].\r\t\t\t\t\ttmp1 elements atRandom remove ].\r\t\t\tTranscript\r\t\t\t\tshow: \'Epoche: \';\r\t\t\t\tshow: (tmp33 at: #currentEpoch);\r\t\t\t\tshow: \'/\'.\r\t\t\ttmp44 := Transcript.\r\t\t\ttmp44\r\t\t\t\tshow: (tmp33 at: #finalEpoch);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of good individuals: \'.\r\t\t\ttmp46 := Transcript.\r\t\t\ttmp46\r\t\t\t\tshow: (tmp33 at: #NumberOfGood);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of bad individuals: \'.\r\t\t\ttmp48 := Transcript.\r\t\t\ttmp48\r\t\t\t\tshow: (tmp33 at: #NumberOfBad);\r\t\t\t\tcr.\r\t\t\ttmp50 := Transcript.\r\t\t\ttmp50\r\t\t\t\tshow: \'-----------------------------------------------\';\r\t\t\t\tcr.\r\t\t\t(tmp33 at: #foodSources)\r\t\t\t\tdo: [ :arg4 | \r\t\t\t\t\t| tmp52 |\r\t\t\t\t\ttmp52 := RTEllipse new.\r\t\t\t\t\ttmp52 size: 30.\r\t\t\t\t\ttmp40 := (tmp52 color: (Color green alpha: 0.4)) element.\r\t\t\t\t\ttmp40\r\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\ttmp1 add: tmp40.\r\t\t\t\t\t(arg4 at: #Occupied) = 0\r\t\t\t\t\t\tifTrue: [ tmp2 addNode: tmp40 ].\r\t\t\t\t\t(arg4 at: #Occupied) = 1\r\t\t\t\t\t\tifTrue: [ | tmp54 |\r\t\t\t\t\t\t\ttmp4 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp4 := Color red ].\r\t\t\t\t\t\t\ttmp54 := RTEllipse new.\r\t\t\t\t\t\t\ttmp54 size: 30.\r\t\t\t\t\t\t\ttmp37 := (tmp54 color: (tmp4 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp37\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp37.\r\t\t\t\t\t\t\ttmp39 := RTLine edgeFrom: tmp37 to: tmp40.\r\t\t\t\t\t\t\ttmp1 add: tmp39.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp40;\r\t\t\t\t\t\t\t\taddNode: tmp37;\r\t\t\t\t\t\t\t\taddEdge: tmp39 ].\r\t\t\t\t\t(arg4 at: #Occupied) = 2\r\t\t\t\t\t\tifTrue: [ | tmp56 tmp58 |\r\t\t\t\t\t\t\ttmp4 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp4 := Color red ].\r\t\t\t\t\t\t\ttmp56 := RTEllipse new.\r\t\t\t\t\t\t\ttmp56 size: 30.\r\t\t\t\t\t\t\ttmp37 := (tmp56 color: (tmp4 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp37\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp37.\r\t\t\t\t\t\t\ttmp4 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 2) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp4 := Color red ].\r\t\t\t\t\t\t\ttmp58 := RTEllipse new.\r\t\t\t\t\t\t\ttmp58 size: 30.\r\t\t\t\t\t\t\ttmp38 := (tmp58 color: (tmp4 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp38 translateTo: 5 atRandom @ 5 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp38.\r\t\t\t\t\t\t\ttmp39 := RTLine edgeFrom: tmp37 to: tmp40.\r\t\t\t\t\t\t\ttmp36 := RTLine edgeFrom: tmp38 to: tmp40.\r\t\t\t\t\t\t\ttmp1\r\t\t\t\t\t\t\t\tadd: tmp39;\r\t\t\t\t\t\t\t\tadd: tmp36.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp40;\r\t\t\t\t\t\t\t\taddNode: tmp37;\r\t\t\t\t\t\t\t\taddEdge: tmp39;\r\t\t\t\t\t\t\t\taddNode: tmp38;\r\t\t\t\t\t\t\t\taddEdge: tmp36 ] ].\r\t\t\ttmp1 signalUpdate ]',			#stamp : '',			#package : #''		}	}}OmEntry {	#tags : {		#author : 'DamjanManojlovic',		#time : DateAndTime [ '2021-06-25T17:44:10.168301+02:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PackageManifest subclass: #Manifest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'\'',				#superclassName : 'PackageManifest',				#traitCompositionSource : '{}'			},			#name : #Manifest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Manifest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'Manifest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Manifest,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #'',			#package : #'',			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'DamjanManojlovic',		#time : DateAndTime [ '2021-06-25T17:44:29.789301+02:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SimulationVisualsation,				#isMetaSide : false			},			#name : #initView,			#protocol : #'as yet unclassified',			#sourceCode : 'initView\r\t| tmp1 tmp2 tmp4 tmp6 |\r\ttmp1 := RTView new.\r\ttmp1 @ RTDraggableView.\r\ttmp2 := RTSpringLayoutStepping new view: tmp1.\r\ttmp2 after: [ tmp1 canvas camera focusOnCenter ].\r\ttmp1 addAnimation: tmp2.\r\ttmp6 := tmp1 canvas.\r\ttmp6\r\t\taddMenu: \'To the end\'\r\t\t\tcallback:\r\t\t\t\t[ | tmp8 tmp9 tmp10 tmp11 tmp12 tmp13 tmp14 tmp15 tmp17 tmp18 tmp19 tmp20 tmp21 tmp23 |\r\t\t\ttmp10 := ZnClient new.\r\t\t\ttmp10\r\t\t\t\turl: \'http://localhost:8080/toTheEnd\';\r\t\t\t\tenforceHttpSuccess: true;\r\t\t\t\taccept: ZnMimeType applicationJson;\r\t\t\t\ttimeout: 1000;\r\t\t\t\tcontentReader: [ :arg1 | NeoJSONReader fromString: arg1 contents ].\r\t\t\ttmp8 := tmp10 get.\r\t\t\tsize := tmp1 elements size.\r\t\t\tsize ~= 0\r\t\t\t\tifTrue: [ tmp9 := size - 1.\r\t\t\t\t\ttmp15 := tmp9.\r\t\t\t\t\t1 to: tmp15 do: [ :tmp16 | (tmp1 elements at: size - tmp16) remove ].\r\t\t\t\t\ttmp1 elements atRandom remove ].\r\t\t\ttmp23 := Transcript.\r\t\t\ttmp23\r\t\t\t\tshow: \'Epoche: \';\r\t\t\t\tshow: (tmp8 at: #currentEpoch);\r\t\t\t\tshow: \'/\'.\r\t\t\ttmp11 := Transcript.\r\t\t\ttmp11\r\t\t\t\tshow: (tmp8 at: #finalEpoch);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of good individuals: \'.\r\t\t\ttmp12 := Transcript.\r\t\t\ttmp12\r\t\t\t\tshow: (tmp8 at: #NumberOfGood);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of bad individuals: \'.\r\t\t\ttmp13 := Transcript.\r\t\t\ttmp13\r\t\t\t\tshow: (tmp8 at: #NumberOfBad);\r\t\t\t\tcr.\r\t\t\ttmp14 := Transcript.\r\t\t\ttmp14\r\t\t\t\tshow: \'-----------------------------------------------\';\r\t\t\t\tcr.\r\t\t\t(tmp8 at: #foodSources)\r\t\t\t\tdo: [ :arg2 | \r\t\t\t\t\t| tmp24 tmp25 tmp26 tmp27 |\r\t\t\t\t\ttmp24 := RTEllipse new.\r\t\t\t\t\ttmp24 size: 30.\r\t\t\t\t\ttmp20 := (tmp24 color: (Color green alpha: 0.4)) element.\r\t\t\t\t\ttmp20\r\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\ttmp1 add: tmp20.\r\t\t\t\t\t(arg2 at: #Occupied) = 0\r\t\t\t\t\t\tifTrue: [ tmp2 addNode: tmp20 ].\r\t\t\t\t\t(arg2 at: #Occupied) = 1\r\t\t\t\t\t\tifTrue: [ tmp4 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp4 := Color red ].\r\t\t\t\t\t\t\ttmp25 := RTEllipse new.\r\t\t\t\t\t\t\ttmp25 size: 30.\r\t\t\t\t\t\t\ttmp19 := (tmp25 color: (tmp4 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp19\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp19.\r\t\t\t\t\t\t\ttmp18 := RTLine edgeFrom: tmp19 to: tmp20.\r\t\t\t\t\t\t\ttmp1 add: tmp18.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp20;\r\t\t\t\t\t\t\t\taddNode: tmp19;\r\t\t\t\t\t\t\t\taddEdge: tmp18 ].\r\t\t\t\t\t(arg2 at: #Occupied) = 2\r\t\t\t\t\t\tifTrue: [ tmp4 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp4 := Color red ].\r\t\t\t\t\t\t\ttmp26 := RTEllipse new.\r\t\t\t\t\t\t\ttmp26 size: 30.\r\t\t\t\t\t\t\ttmp19 := (tmp26 color: (tmp4 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp19\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp19.\r\t\t\t\t\t\t\ttmp4 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 2) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp4 := Color red ].\r\t\t\t\t\t\t\ttmp27 := RTEllipse new.\r\t\t\t\t\t\t\ttmp27 size: 30.\r\t\t\t\t\t\t\ttmp21 := (tmp27 color: (tmp4 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp21\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 5 atRandom @ 5 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp21.\r\t\t\t\t\t\t\ttmp18 := RTLine edgeFrom: tmp19 to: tmp20.\r\t\t\t\t\t\t\ttmp17 := RTLine edgeFrom: tmp21 to: tmp20.\r\t\t\t\t\t\t\ttmp1\r\t\t\t\t\t\t\t\tadd: tmp18;\r\t\t\t\t\t\t\t\tadd: tmp17.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp20;\r\t\t\t\t\t\t\t\taddNode: tmp19;\r\t\t\t\t\t\t\t\taddEdge: tmp18;\r\t\t\t\t\t\t\t\taddNode: tmp21;\r\t\t\t\t\t\t\t\taddEdge: tmp17 ] ].\r\t\t\ttmp1 signalUpdate ];\r\t\taddMenu: \'Next day\'\r\t\t\tcallback:\r\t\t\t\t[ | tmp29 tmp30 tmp31 tmp32 tmp33 tmp34 tmp35 tmp36 tmp38 tmp39 tmp40 tmp41 tmp42 tmp44 |\r\t\t\ttmp31 := ZnClient new.\r\t\t\ttmp31\r\t\t\t\turl: \'http://localhost:8080/nextEpoch\';\r\t\t\t\tenforceHttpSuccess: true;\r\t\t\t\taccept: ZnMimeType applicationJson;\r\t\t\t\tcontentReader: [ :arg3 | NeoJSONReader fromString: arg3 contents ].\r\t\t\ttmp29 := tmp31 get.\r\t\t\tsize := tmp1 elements size.\r\t\t\tsize ~= 0\r\t\t\t\tifTrue: [ tmp30 := size - 1.\r\t\t\t\t\ttmp36 := tmp30.\r\t\t\t\t\t1 to: tmp36 do: [ :tmp37 | (tmp1 elements at: size - tmp37) remove ].\r\t\t\t\t\ttmp1 elements atRandom remove ].\r\t\t\ttmp44 := Transcript.\r\t\t\ttmp44\r\t\t\t\tshow: \'Epoche: \';\r\t\t\t\tshow: (tmp29 at: #currentEpoch);\r\t\t\t\tshow: \'/\'.\r\t\t\ttmp32 := Transcript.\r\t\t\ttmp32\r\t\t\t\tshow: (tmp29 at: #finalEpoch);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of good individuals: \'.\r\t\t\ttmp33 := Transcript.\r\t\t\ttmp33\r\t\t\t\tshow: (tmp29 at: #NumberOfGood);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of bad individuals: \'.\r\t\t\ttmp34 := Transcript.\r\t\t\ttmp34\r\t\t\t\tshow: (tmp29 at: #NumberOfBad);\r\t\t\t\tcr.\r\t\t\ttmp35 := Transcript.\r\t\t\ttmp35\r\t\t\t\tshow: \'-----------------------------------------------\';\r\t\t\t\tcr.\r\t\t\t(tmp29 at: #foodSources)\r\t\t\t\tdo: [ :arg4 | \r\t\t\t\t\t| tmp45 tmp46 tmp47 tmp48 |\r\t\t\t\t\ttmp45 := RTEllipse new.\r\t\t\t\t\ttmp45 size: 30.\r\t\t\t\t\ttmp39 := (tmp45 color: (Color green alpha: 0.4)) element.\r\t\t\t\t\ttmp39\r\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\ttmp1 add: tmp39.\r\t\t\t\t\t(arg4 at: #Occupied) = 0\r\t\t\t\t\t\tifTrue: [ tmp2 addNode: tmp39 ].\r\t\t\t\t\t(arg4 at: #Occupied) = 1\r\t\t\t\t\t\tifTrue: [ tmp4 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp4 := Color red ].\r\t\t\t\t\t\t\ttmp46 := RTEllipse new.\r\t\t\t\t\t\t\ttmp46 size: 30.\r\t\t\t\t\t\t\ttmp40 := (tmp46 color: (tmp4 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp40\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp40.\r\t\t\t\t\t\t\ttmp38 := RTLine edgeFrom: tmp40 to: tmp39.\r\t\t\t\t\t\t\ttmp1 add: tmp38.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp39;\r\t\t\t\t\t\t\t\taddNode: tmp40;\r\t\t\t\t\t\t\t\taddEdge: tmp38 ].\r\t\t\t\t\t(arg4 at: #Occupied) = 2\r\t\t\t\t\t\tifTrue: [ tmp4 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp4 := Color red ].\r\t\t\t\t\t\t\ttmp47 := RTEllipse new.\r\t\t\t\t\t\t\ttmp47 size: 30.\r\t\t\t\t\t\t\ttmp40 := (tmp47 color: (tmp4 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp40\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp40.\r\t\t\t\t\t\t\ttmp4 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 2) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp4 := Color red ].\r\t\t\t\t\t\t\ttmp48 := RTEllipse new.\r\t\t\t\t\t\t\ttmp48 size: 30.\r\t\t\t\t\t\t\ttmp41 := (tmp48 color: (tmp4 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp41 translateTo: 5 atRandom @ 5 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp41.\r\t\t\t\t\t\t\ttmp38 := RTLine edgeFrom: tmp40 to: tmp39.\r\t\t\t\t\t\t\ttmp42 := RTLine edgeFrom: tmp41 to: tmp39.\r\t\t\t\t\t\t\ttmp1\r\t\t\t\t\t\t\t\tadd: tmp38;\r\t\t\t\t\t\t\t\tadd: tmp42.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp39;\r\t\t\t\t\t\t\t\taddNode: tmp40;\r\t\t\t\t\t\t\t\taddEdge: tmp38;\r\t\t\t\t\t\t\t\taddNode: tmp41;\r\t\t\t\t\t\t\t\taddEdge: tmp42 ] ].\r\t\t\ttmp1 signalUpdate ]',			#stamp : '',			#package : #''		}	}}OmEntry {	#tags : {		#author : 'DamjanManojlovic',		#time : DateAndTime [ '2021-06-25T17:44:47.539301+02:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Manifest class',				#isMetaSide : true			},			#name : #ruleRBCodeCruftLeftInMethodsRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBCodeCruftLeftInMethodsRuleV1FalsePositive\r\t^ #()',			#stamp : '',			#package : #''		}	}}OmEntry {	#tags : {		#author : 'DamjanManojlovic',		#time : DateAndTime [ '2021-06-25T17:44:47.547301+02:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Manifest class',				#isMetaSide : true			},			#name : #ruleRBCodeCruftLeftInMethodsRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBCodeCruftLeftInMethodsRuleV1FalsePositive\r\t^ #()',			#stamp : '',			#package : #''		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Manifest class',				#isMetaSide : true			},			#name : #ruleRBCodeCruftLeftInMethodsRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBCodeCruftLeftInMethodsRuleV1FalsePositive\r\t^ #(#(#(#RGClassDefinition #(#SimulationVisualsation)) #\'2021-06-25T17:44:47.542301+02:00\'))',			#stamp : '',			#package : #''		}	}}OmEntry {	#tags : {		#author : 'DamjanManojlovic',		#time : DateAndTime [ '2021-06-25T17:44:52.189301+02:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Manifest class',				#isMetaSide : true			},			#name : #ruleRBCodeCruftLeftInMethodsRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBCodeCruftLeftInMethodsRuleV1FalsePositive\r\t^ #(#(#(#RGClassDefinition #(#SimulationVisualsation)) #\'2021-06-25T17:44:47.542301+02:00\'))',			#stamp : '',			#package : #''		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Manifest class',				#isMetaSide : true			},			#name : #ruleRBCodeCruftLeftInMethodsRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBCodeCruftLeftInMethodsRuleV1FalsePositive\r\t^ #(#(#(#RGClassDefinition #(#SimulationVisualsation)) #\'2021-06-25T17:44:47.542301+02:00\') #(#(#RGMethodDefinition #(#SimulationVisualsation #initView #false)) #\'2021-06-25T17:44:52.178301+02:00\'))',			#stamp : '',			#package : #''		}	}}OmEntry {	#tags : {		#author : 'DamjanManojlovic',		#time : DateAndTime [ '2021-06-25T17:45:06.108301+02:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SimulationVisualsation,				#isMetaSide : false			},			#name : #messageSelectorAndArgumentNames,			#protocol : #'as yet unclassified',			#sourceCode : 'messageSelectorAndArgumentNames\r\t| tmp1 tmp2 tmp4 |\r\ttmp1 := RTView new.\r\ttmp1 @ RTDraggableView.\r\ttmp2 := RTSpringLayoutStepping new view: tmp1.\r\ttmp2 after: [ tmp1 canvas camera focusOnCenter ].\r\ttmp1 addAnimation: tmp2.\r\ttmp1 canvas\r\t\taddMenu: \'To the end\'\r\t\t\tcallback:\r\t\t\t\t[ | tmp6 tmp7 tmp9 tmp10 tmp11 tmp12 tmp13 tmp15 tmp17 tmp19 tmp21 tmp23 |\r\t\t\ttmp15 := ZnClient new.\r\t\t\ttmp15\r\t\t\t\turl: \'http://localhost:8080/toTheEnd\';\r\t\t\t\tenforceHttpSuccess: true;\r\t\t\t\taccept: ZnMimeType applicationJson;\r\t\t\t\ttimeout: 1000;\r\t\t\t\tcontentReader: [ :arg1 | NeoJSONReader fromString: arg1 contents ].\r\t\t\ttmp6 := tmp15 get.\r\t\t\tsize := tmp1 elements size.\r\t\t\tsize ~= 0\r\t\t\t\tifTrue: [ tmp7 := size - 1.\r\t\t\t\t\t1 to: tmp7 do: [ :tmp8 | (tmp1 elements at: size - tmp8) remove ].\r\t\t\t\t\ttmp1 elements atRandom remove ].\r\t\t\tTranscript\r\t\t\t\tshow: \'Epoche: \';\r\t\t\t\tshow: (tmp6 at: #currentEpoch);\r\t\t\t\tshow: \'/\'.\r\t\t\ttmp17 := Transcript.\r\t\t\ttmp17\r\t\t\t\tshow: (tmp6 at: #finalEpoch);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of good individuals: \'.\r\t\t\ttmp19 := Transcript.\r\t\t\ttmp19\r\t\t\t\tshow: (tmp6 at: #NumberOfGood);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of bad individuals: \'.\r\t\t\ttmp21 := Transcript.\r\t\t\ttmp21\r\t\t\t\tshow: (tmp6 at: #NumberOfBad);\r\t\t\t\tcr.\r\t\t\ttmp23 := Transcript.\r\t\t\ttmp23\r\t\t\t\tshow: \'-----------------------------------------------\';\r\t\t\t\tcr.\r\t\t\t(tmp6 at: #foodSources)\r\t\t\t\tdo: [ :arg2 | \r\t\t\t\t\t| tmp25 |\r\t\t\t\t\ttmp25 := RTEllipse new.\r\t\t\t\t\ttmp25 size: 30.\r\t\t\t\t\ttmp13 := (tmp25 color: (Color green alpha: 0.4)) element.\r\t\t\t\t\ttmp13\r\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\ttmp1 add: tmp13.\r\t\t\t\t\t(arg2 at: #Occupied) = 0\r\t\t\t\t\t\tifTrue: [ tmp2 addNode: tmp13 ].\r\t\t\t\t\t(arg2 at: #Occupied) = 1\r\t\t\t\t\t\tifTrue: [ | tmp27 |\r\t\t\t\t\t\t\ttmp4 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp4 := Color red ].\r\t\t\t\t\t\t\ttmp27 := RTEllipse new.\r\t\t\t\t\t\t\ttmp27 size: 30.\r\t\t\t\t\t\t\ttmp10 := (tmp27 color: (tmp4 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp10\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp10.\r\t\t\t\t\t\t\ttmp12 := RTLine edgeFrom: tmp10 to: tmp13.\r\t\t\t\t\t\t\ttmp1 add: tmp12.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp13;\r\t\t\t\t\t\t\t\taddNode: tmp10;\r\t\t\t\t\t\t\t\taddEdge: tmp12 ].\r\t\t\t\t\t(arg2 at: #Occupied) = 2\r\t\t\t\t\t\tifTrue: [ | tmp29 tmp31 |\r\t\t\t\t\t\t\ttmp4 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp4 := Color red ].\r\t\t\t\t\t\t\ttmp29 := RTEllipse new.\r\t\t\t\t\t\t\ttmp29 size: 30.\r\t\t\t\t\t\t\ttmp10 := (tmp29 color: (tmp4 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp10\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp10.\r\t\t\t\t\t\t\ttmp4 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 2) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp4 := Color red ].\r\t\t\t\t\t\t\ttmp31 := RTEllipse new.\r\t\t\t\t\t\t\ttmp31 size: 30.\r\t\t\t\t\t\t\ttmp11 := (tmp31 color: (tmp4 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp11\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 5 atRandom @ 5 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp11.\r\t\t\t\t\t\t\ttmp12 := RTLine edgeFrom: tmp10 to: tmp13.\r\t\t\t\t\t\t\ttmp9 := RTLine edgeFrom: tmp11 to: tmp13.\r\t\t\t\t\t\t\ttmp1\r\t\t\t\t\t\t\t\tadd: tmp12;\r\t\t\t\t\t\t\t\tadd: tmp9.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp13;\r\t\t\t\t\t\t\t\taddNode: tmp10;\r\t\t\t\t\t\t\t\taddEdge: tmp12;\r\t\t\t\t\t\t\t\taddNode: tmp11;\r\t\t\t\t\t\t\t\taddEdge: tmp9 ] ].\r\t\t\ttmp1 signalUpdate ];\r\t\taddMenu: \'Next day\'\r\t\t\tcallback:\r\t\t\t\t[ | tmp33 tmp34 tmp36 tmp37 tmp38 tmp39 tmp40 tmp42 tmp44 tmp46 tmp48 tmp50 |\r\t\t\ttmp42 := ZnClient new.\r\t\t\ttmp42\r\t\t\t\turl: \'http://localhost:8080/nextEpoch\';\r\t\t\t\tenforceHttpSuccess: true;\r\t\t\t\taccept: ZnMimeType applicationJson;\r\t\t\t\tcontentReader: [ :arg3 | NeoJSONReader fromString: arg3 contents ].\r\t\t\ttmp33 := tmp42 get.\r\t\t\tsize := tmp1 elements size.\r\t\t\tsize ~= 0\r\t\t\t\tifTrue: [ tmp34 := size - 1.\r\t\t\t\t\t1 to: tmp34 do: [ :tmp35 | (tmp1 elements at: size - tmp35) remove ].\r\t\t\t\t\ttmp1 elements atRandom remove ].\r\t\t\tTranscript\r\t\t\t\tshow: \'Epoche: \';\r\t\t\t\tshow: (tmp33 at: #currentEpoch);\r\t\t\t\tshow: \'/\'.\r\t\t\ttmp44 := Transcript.\r\t\t\ttmp44\r\t\t\t\tshow: (tmp33 at: #finalEpoch);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of good individuals: \'.\r\t\t\ttmp46 := Transcript.\r\t\t\ttmp46\r\t\t\t\tshow: (tmp33 at: #NumberOfGood);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of bad individuals: \'.\r\t\t\ttmp48 := Transcript.\r\t\t\ttmp48\r\t\t\t\tshow: (tmp33 at: #NumberOfBad);\r\t\t\t\tcr.\r\t\t\ttmp50 := Transcript.\r\t\t\ttmp50\r\t\t\t\tshow: \'-----------------------------------------------\';\r\t\t\t\tcr.\r\t\t\t(tmp33 at: #foodSources)\r\t\t\t\tdo: [ :arg4 | \r\t\t\t\t\t| tmp52 |\r\t\t\t\t\ttmp52 := RTEllipse new.\r\t\t\t\t\ttmp52 size: 30.\r\t\t\t\t\ttmp40 := (tmp52 color: (Color green alpha: 0.4)) element.\r\t\t\t\t\ttmp40\r\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\ttmp1 add: tmp40.\r\t\t\t\t\t(arg4 at: #Occupied) = 0\r\t\t\t\t\t\tifTrue: [ tmp2 addNode: tmp40 ].\r\t\t\t\t\t(arg4 at: #Occupied) = 1\r\t\t\t\t\t\tifTrue: [ | tmp54 |\r\t\t\t\t\t\t\ttmp4 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp4 := Color red ].\r\t\t\t\t\t\t\ttmp54 := RTEllipse new.\r\t\t\t\t\t\t\ttmp54 size: 30.\r\t\t\t\t\t\t\ttmp37 := (tmp54 color: (tmp4 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp37\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp37.\r\t\t\t\t\t\t\ttmp39 := RTLine edgeFrom: tmp37 to: tmp40.\r\t\t\t\t\t\t\ttmp1 add: tmp39.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp40;\r\t\t\t\t\t\t\t\taddNode: tmp37;\r\t\t\t\t\t\t\t\taddEdge: tmp39 ].\r\t\t\t\t\t(arg4 at: #Occupied) = 2\r\t\t\t\t\t\tifTrue: [ | tmp56 tmp58 |\r\t\t\t\t\t\t\ttmp4 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp4 := Color red ].\r\t\t\t\t\t\t\ttmp56 := RTEllipse new.\r\t\t\t\t\t\t\ttmp56 size: 30.\r\t\t\t\t\t\t\ttmp37 := (tmp56 color: (tmp4 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp37\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp37.\r\t\t\t\t\t\t\ttmp4 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 2) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp4 := Color red ].\r\t\t\t\t\t\t\ttmp58 := RTEllipse new.\r\t\t\t\t\t\t\ttmp58 size: 30.\r\t\t\t\t\t\t\ttmp38 := (tmp58 color: (tmp4 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp38 translateTo: 5 atRandom @ 5 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp38.\r\t\t\t\t\t\t\ttmp39 := RTLine edgeFrom: tmp37 to: tmp40.\r\t\t\t\t\t\t\ttmp36 := RTLine edgeFrom: tmp38 to: tmp40.\r\t\t\t\t\t\t\ttmp1\r\t\t\t\t\t\t\t\tadd: tmp39;\r\t\t\t\t\t\t\t\tadd: tmp36.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp40;\r\t\t\t\t\t\t\t\taddNode: tmp37;\r\t\t\t\t\t\t\t\taddEdge: tmp39;\r\t\t\t\t\t\t\t\taddNode: tmp38;\r\t\t\t\t\t\t\t\taddEdge: tmp36 ] ].\r\t\t\ttmp1 signalUpdate ]',			#stamp : '',			#package : #''		}	}}OmEntry {	#tags : {		#author : 'DamjanManojlovic',		#time : DateAndTime [ '2021-06-25T17:48:13.620301+02:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SimulationVisualsation,				#isMetaSide : false			},			#name : #initView,			#protocol : #'as yet unclassified',			#sourceCode : 'initView\r\t| tmp1 tmp2 tmp4 tmp6 |\r\ttmp1 := RTView new.\r\ttmp1 @ RTDraggableView.\r\ttmp2 := RTSpringLayoutStepping new view: tmp1.\r\ttmp2 after: [ tmp1 canvas camera focusOnCenter ].\r\ttmp1 addAnimation: tmp2.\r\ttmp6 := tmp1 canvas.\r\ttmp6\r\t\taddMenu: \'To the end\'\r\t\t\tcallback:\r\t\t\t\t[ | tmp8 tmp9 tmp10 tmp11 tmp12 tmp13 tmp14 tmp15 tmp17 tmp18 tmp19 tmp20 tmp21 tmp23 |\r\t\t\ttmp10 := ZnClient new.\r\t\t\ttmp10\r\t\t\t\turl: \'http://localhost:8080/toTheEnd\';\r\t\t\t\tenforceHttpSuccess: true;\r\t\t\t\taccept: ZnMimeType applicationJson;\r\t\t\t\ttimeout: 1000;\r\t\t\t\tcontentReader: [ :arg1 | NeoJSONReader fromString: arg1 contents ].\r\t\t\ttmp8 := tmp10 get.\r\t\t\tsize := tmp1 elements size.\r\t\t\tsize ~= 0\r\t\t\t\tifTrue: [ tmp9 := size - 1.\r\t\t\t\t\ttmp15 := tmp9.\r\t\t\t\t\t1 to: tmp15 do: [ :tmp16 | (tmp1 elements at: size - tmp16) remove ].\r\t\t\t\t\ttmp1 elements atRandom remove ].\r\t\t\ttmp23 := Transcript.\r\t\t\ttmp23\r\t\t\t\tshow: \'Epoche: \';\r\t\t\t\tshow: (tmp8 at: #currentEpoch);\r\t\t\t\tshow: \'/\'.\r\t\t\ttmp11 := Transcript.\r\t\t\ttmp11\r\t\t\t\tshow: (tmp8 at: #finalEpoch);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of good individuals: \'.\r\t\t\ttmp12 := Transcript.\r\t\t\ttmp12\r\t\t\t\tshow: (tmp8 at: #NumberOfGood);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of bad individuals: \'.\r\t\t\ttmp13 := Transcript.\r\t\t\ttmp13\r\t\t\t\tshow: (tmp8 at: #NumberOfBad);\r\t\t\t\tcr.\r\t\t\ttmp14 := Transcript.\r\t\t\ttmp14\r\t\t\t\tshow: \'-----------------------------------------------\';\r\t\t\t\tcr.\r\t\t\t(tmp8 at: #foodSources)\r\t\t\t\tdo: [ :arg2 | \r\t\t\t\t\t| tmp24 tmp25 tmp26 tmp27 |\r\t\t\t\t\ttmp24 := RTEllipse new.\r\t\t\t\t\ttmp24 size: 30.\r\t\t\t\t\ttmp20 := (tmp24 color: (Color green alpha: 0.4)) element.\r\t\t\t\t\ttmp20\r\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\ttmp1 add: tmp20.\r\t\t\t\t\t(arg2 at: #Occupied) = 0\r\t\t\t\t\t\tifTrue: [ tmp2 addNode: tmp20 ].\r\t\t\t\t\t(arg2 at: #Occupied) = 1\r\t\t\t\t\t\tifTrue: [ tmp4 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp4 := Color red ].\r\t\t\t\t\t\t\ttmp25 := RTEllipse new.\r\t\t\t\t\t\t\ttmp25 size: 30.\r\t\t\t\t\t\t\ttmp19 := (tmp25 color: (tmp4 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp19\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp19.\r\t\t\t\t\t\t\ttmp18 := RTLine edgeFrom: tmp19 to: tmp20.\r\t\t\t\t\t\t\ttmp1 add: tmp18.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp20;\r\t\t\t\t\t\t\t\taddNode: tmp19;\r\t\t\t\t\t\t\t\taddEdge: tmp18 ].\r\t\t\t\t\t(arg2 at: #Occupied) = 2\r\t\t\t\t\t\tifTrue: [ tmp4 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp4 := Color red ].\r\t\t\t\t\t\t\ttmp26 := RTEllipse new.\r\t\t\t\t\t\t\ttmp26 size: 30.\r\t\t\t\t\t\t\ttmp19 := (tmp26 color: (tmp4 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp19\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp19.\r\t\t\t\t\t\t\ttmp4 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 2) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp4 := Color red ].\r\t\t\t\t\t\t\ttmp27 := RTEllipse new.\r\t\t\t\t\t\t\ttmp27 size: 30.\r\t\t\t\t\t\t\ttmp21 := (tmp27 color: (tmp4 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp21\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 5 atRandom @ 5 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp21.\r\t\t\t\t\t\t\ttmp18 := RTLine edgeFrom: tmp19 to: tmp20.\r\t\t\t\t\t\t\ttmp17 := RTLine edgeFrom: tmp21 to: tmp20.\r\t\t\t\t\t\t\ttmp1\r\t\t\t\t\t\t\t\tadd: tmp18;\r\t\t\t\t\t\t\t\tadd: tmp17.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp20;\r\t\t\t\t\t\t\t\taddNode: tmp19;\r\t\t\t\t\t\t\t\taddEdge: tmp18;\r\t\t\t\t\t\t\t\taddNode: tmp21;\r\t\t\t\t\t\t\t\taddEdge: tmp17 ] ].\r\t\t\ttmp1 signalUpdate ];\r\t\taddMenu: \'Next day\'\r\t\t\tcallback:\r\t\t\t\t[ | tmp29 tmp30 tmp31 tmp32 tmp33 tmp34 tmp35 tmp36 tmp38 tmp39 tmp40 tmp41 tmp42 tmp44 |\r\t\t\ttmp31 := ZnClient new.\r\t\t\ttmp31\r\t\t\t\turl: \'http://localhost:8080/nextEpoch\';\r\t\t\t\tenforceHttpSuccess: true;\r\t\t\t\taccept: ZnMimeType applicationJson;\r\t\t\t\tcontentReader: [ :arg3 | NeoJSONReader fromString: arg3 contents ].\r\t\t\ttmp29 := tmp31 get.\r\t\t\tsize := tmp1 elements size.\r\t\t\tsize ~= 0\r\t\t\t\tifTrue: [ tmp30 := size - 1.\r\t\t\t\t\ttmp36 := tmp30.\r\t\t\t\t\t1 to: tmp36 do: [ :tmp37 | (tmp1 elements at: size - tmp37) remove ].\r\t\t\t\t\ttmp1 elements atRandom remove ].\r\t\t\ttmp44 := Transcript.\r\t\t\ttmp44\r\t\t\t\tshow: \'Epoche: \';\r\t\t\t\tshow: (tmp29 at: #currentEpoch);\r\t\t\t\tshow: \'/\'.\r\t\t\ttmp32 := Transcript.\r\t\t\ttmp32\r\t\t\t\tshow: (tmp29 at: #finalEpoch);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of good individuals: \'.\r\t\t\ttmp33 := Transcript.\r\t\t\ttmp33\r\t\t\t\tshow: (tmp29 at: #NumberOfGood);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of bad individuals: \'.\r\t\t\ttmp34 := Transcript.\r\t\t\ttmp34\r\t\t\t\tshow: (tmp29 at: #NumberOfBad);\r\t\t\t\tcr.\r\t\t\ttmp35 := Transcript.\r\t\t\ttmp35\r\t\t\t\tshow: \'-----------------------------------------------\';\r\t\t\t\tcr.\r\t\t\t(tmp29 at: #foodSources)\r\t\t\t\tdo: [ :arg4 | \r\t\t\t\t\t| tmp45 tmp46 tmp47 tmp48 |\r\t\t\t\t\ttmp45 := RTEllipse new.\r\t\t\t\t\ttmp45 size: 30.\r\t\t\t\t\ttmp39 := (tmp45 color: (Color green alpha: 0.4)) element.\r\t\t\t\t\ttmp39\r\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\ttmp1 add: tmp39.\r\t\t\t\t\t(arg4 at: #Occupied) = 0\r\t\t\t\t\t\tifTrue: [ tmp2 addNode: tmp39 ].\r\t\t\t\t\t(arg4 at: #Occupied) = 1\r\t\t\t\t\t\tifTrue: [ tmp4 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp4 := Color red ].\r\t\t\t\t\t\t\ttmp46 := RTEllipse new.\r\t\t\t\t\t\t\ttmp46 size: 30.\r\t\t\t\t\t\t\ttmp40 := (tmp46 color: (tmp4 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp40\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp40.\r\t\t\t\t\t\t\ttmp38 := RTLine edgeFrom: tmp40 to: tmp39.\r\t\t\t\t\t\t\ttmp1 add: tmp38.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp39;\r\t\t\t\t\t\t\t\taddNode: tmp40;\r\t\t\t\t\t\t\t\taddEdge: tmp38 ].\r\t\t\t\t\t(arg4 at: #Occupied) = 2\r\t\t\t\t\t\tifTrue: [ tmp4 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp4 := Color red ].\r\t\t\t\t\t\t\ttmp47 := RTEllipse new.\r\t\t\t\t\t\t\ttmp47 size: 30.\r\t\t\t\t\t\t\ttmp40 := (tmp47 color: (tmp4 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp40\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp40.\r\t\t\t\t\t\t\ttmp4 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 2) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp4 := Color red ].\r\t\t\t\t\t\t\ttmp48 := RTEllipse new.\r\t\t\t\t\t\t\ttmp48 size: 30.\r\t\t\t\t\t\t\ttmp41 := (tmp48 color: (tmp4 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp41 translateTo: 5 atRandom @ 5 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp41.\r\t\t\t\t\t\t\ttmp38 := RTLine edgeFrom: tmp40 to: tmp39.\r\t\t\t\t\t\t\ttmp42 := RTLine edgeFrom: tmp41 to: tmp39.\r\t\t\t\t\t\t\ttmp1\r\t\t\t\t\t\t\t\tadd: tmp38;\r\t\t\t\t\t\t\t\tadd: tmp42.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp39;\r\t\t\t\t\t\t\t\taddNode: tmp40;\r\t\t\t\t\t\t\t\taddEdge: tmp38;\r\t\t\t\t\t\t\t\taddNode: tmp41;\r\t\t\t\t\t\t\t\taddEdge: tmp42 ] ].\r\t\t\ttmp1 signalUpdate ]',			#stamp : '',			#package : #''		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SimulationVisualsation,				#isMetaSide : false			},			#name : #initView,			#protocol : #'as yet unclassified',			#sourceCode : 'initView\r\t| tmp1 tmp2 tmp3 tmp5 |\r\ttmp1 := RTView new.\r\ttmp1 @ RTDraggableView.\r\ttmp2 := RTSpringLayoutStepping new view: tmp1.\r\ttmp2 after: [ tmp1 canvas camera focusOnCenter ].\r\ttmp1 addAnimation: tmp2.\r\ttmp3 := tmp1 canvas.\r\ttmp3\r\t\taddMenu: \'To the end\'\r\t\t\tcallback:\r\t\t\t\t[ | tmp7 tmp8 tmp9 tmp10 tmp11 tmp12 tmp13 tmp14 tmp15 tmp16 tmp18 tmp19 tmp20 tmp21 tmp22 |\r\t\t\ttmp9 := ZnClient new.\r\t\t\ttmp9\r\t\t\t\turl: \'http://localhost:8080/toTheEnd\';\r\t\t\t\tenforceHttpSuccess: true;\r\t\t\t\taccept: ZnMimeType applicationJson;\r\t\t\t\ttimeout: 1000;\r\t\t\t\tcontentReader: [ :arg1 | NeoJSONReader fromString: arg1 contents ].\r\t\t\ttmp7 := tmp9 get.\r\t\t\tsize := tmp1 elements size.\r\t\t\tsize ~= 0\r\t\t\t\tifTrue: [ tmp8 := size - 1.\r\t\t\t\t\ttmp14 := tmp8.\r\t\t\t\t\ttmp16 := tmp14.\r\t\t\t\t\t1 to: tmp16 do: [ :tmp17 | (tmp1 elements at: size - tmp17) remove ].\r\t\t\t\t\ttmp1 elements atRandom remove ].\r\t\t\ttmp15 := Transcript.\r\t\t\ttmp15\r\t\t\t\tshow: \'Epoche: \';\r\t\t\t\tshow: (tmp7 at: #currentEpoch);\r\t\t\t\tshow: \'/\'.\r\t\t\ttmp10 := Transcript.\r\t\t\ttmp10\r\t\t\t\tshow: (tmp7 at: #finalEpoch);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of good individuals: \'.\r\t\t\ttmp11 := Transcript.\r\t\t\ttmp11\r\t\t\t\tshow: (tmp7 at: #NumberOfGood);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of bad individuals: \'.\r\t\t\ttmp12 := Transcript.\r\t\t\ttmp12\r\t\t\t\tshow: (tmp7 at: #NumberOfBad);\r\t\t\t\tcr.\r\t\t\ttmp13 := Transcript.\r\t\t\ttmp13\r\t\t\t\tshow: \'-----------------------------------------------\';\r\t\t\t\tcr.\r\t\t\t(tmp7 at: #foodSources)\r\t\t\t\tdo: [ :arg2 | \r\t\t\t\t\t| tmp23 tmp24 tmp25 tmp26 |\r\t\t\t\t\ttmp23 := RTEllipse new.\r\t\t\t\t\ttmp23 size: 30.\r\t\t\t\t\ttmp22 := (tmp23 color: (Color green alpha: 0.4)) element.\r\t\t\t\t\ttmp22\r\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\ttmp1 add: tmp22.\r\t\t\t\t\t(arg2 at: #Occupied) = 0\r\t\t\t\t\t\tifTrue: [ tmp2 addNode: tmp22 ].\r\t\t\t\t\t(arg2 at: #Occupied) = 1\r\t\t\t\t\t\tifTrue: [ tmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp24 := RTEllipse new.\r\t\t\t\t\t\t\ttmp24 size: 30.\r\t\t\t\t\t\t\ttmp20 := (tmp24 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp20\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp20.\r\t\t\t\t\t\t\ttmp18 := RTLine edgeFrom: tmp20 to: tmp22.\r\t\t\t\t\t\t\ttmp1 add: tmp18.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp22;\r\t\t\t\t\t\t\t\taddNode: tmp20;\r\t\t\t\t\t\t\t\taddEdge: tmp18 ].\r\t\t\t\t\t(arg2 at: #Occupied) = 2\r\t\t\t\t\t\tifTrue: [ tmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp25 := RTEllipse new.\r\t\t\t\t\t\t\ttmp25 size: 30.\r\t\t\t\t\t\t\ttmp20 := (tmp25 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp20\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp20.\r\t\t\t\t\t\t\ttmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 2) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp26 := RTEllipse new.\r\t\t\t\t\t\t\ttmp26 size: 30.\r\t\t\t\t\t\t\ttmp19 := (tmp26 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp19\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 5 atRandom @ 5 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp19.\r\t\t\t\t\t\t\ttmp18 := RTLine edgeFrom: tmp20 to: tmp22.\r\t\t\t\t\t\t\ttmp21 := RTLine edgeFrom: tmp19 to: tmp22.\r\t\t\t\t\t\t\ttmp1\r\t\t\t\t\t\t\t\tadd: tmp18;\r\t\t\t\t\t\t\t\tadd: tmp21.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp22;\r\t\t\t\t\t\t\t\taddNode: tmp20;\r\t\t\t\t\t\t\t\taddEdge: tmp18;\r\t\t\t\t\t\t\t\taddNode: tmp19;\r\t\t\t\t\t\t\t\taddEdge: tmp21 ] ].\r\t\t\ttmp1 signalUpdate ];\r\t\taddMenu: \'Next day\'\r\t\t\tcallback:\r\t\t\t\t[ | tmp28 tmp29 tmp30 tmp31 tmp32 tmp33 tmp34 tmp35 tmp36 tmp37 tmp39 tmp40 tmp41 tmp42 tmp43 |\r\t\t\ttmp30 := ZnClient new.\r\t\t\ttmp30\r\t\t\t\turl: \'http://localhost:8080/nextEpoch\';\r\t\t\t\tenforceHttpSuccess: true;\r\t\t\t\taccept: ZnMimeType applicationJson;\r\t\t\t\tcontentReader: [ :arg3 | NeoJSONReader fromString: arg3 contents ].\r\t\t\ttmp28 := tmp30 get.\r\t\t\tsize := tmp1 elements size.\r\t\t\tsize ~= 0\r\t\t\t\tifTrue: [ tmp29 := size - 1.\r\t\t\t\t\ttmp35 := tmp29.\r\t\t\t\t\ttmp37 := tmp35.\r\t\t\t\t\t1 to: tmp37 do: [ :tmp38 | (tmp1 elements at: size - tmp38) remove ].\r\t\t\t\t\ttmp1 elements atRandom remove ].\r\t\t\ttmp36 := Transcript.\r\t\t\ttmp36\r\t\t\t\tshow: \'Epoche: \';\r\t\t\t\tshow: (tmp28 at: #currentEpoch);\r\t\t\t\tshow: \'/\'.\r\t\t\ttmp31 := Transcript.\r\t\t\ttmp31\r\t\t\t\tshow: (tmp28 at: #finalEpoch);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of good individuals: \'.\r\t\t\ttmp32 := Transcript.\r\t\t\ttmp32\r\t\t\t\tshow: (tmp28 at: #NumberOfGood);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of bad individuals: \'.\r\t\t\ttmp33 := Transcript.\r\t\t\ttmp33\r\t\t\t\tshow: (tmp28 at: #NumberOfBad);\r\t\t\t\tcr.\r\t\t\ttmp34 := Transcript.\r\t\t\ttmp34\r\t\t\t\tshow: \'-----------------------------------------------\';\r\t\t\t\tcr.\r\t\t\t(tmp28 at: #foodSources)\r\t\t\t\tdo: [ :arg4 | \r\t\t\t\t\t| tmp44 tmp45 tmp46 tmp47 |\r\t\t\t\t\ttmp44 := RTEllipse new.\r\t\t\t\t\ttmp44 size: 30.\r\t\t\t\t\ttmp41 := (tmp44 color: (Color green alpha: 0.4)) element.\r\t\t\t\t\ttmp41\r\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\ttmp1 add: tmp41.\r\t\t\t\t\t(arg4 at: #Occupied) = 0\r\t\t\t\t\t\tifTrue: [ tmp2 addNode: tmp41 ].\r\t\t\t\t\t(arg4 at: #Occupied) = 1\r\t\t\t\t\t\tifTrue: [ tmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp45 := RTEllipse new.\r\t\t\t\t\t\t\ttmp45 size: 30.\r\t\t\t\t\t\t\ttmp40 := (tmp45 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp40\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp40.\r\t\t\t\t\t\t\ttmp43 := RTLine edgeFrom: tmp40 to: tmp41.\r\t\t\t\t\t\t\ttmp1 add: tmp43.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp41;\r\t\t\t\t\t\t\t\taddNode: tmp40;\r\t\t\t\t\t\t\t\taddEdge: tmp43 ].\r\t\t\t\t\t(arg4 at: #Occupied) = 2\r\t\t\t\t\t\tifTrue: [ tmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp46 := RTEllipse new.\r\t\t\t\t\t\t\ttmp46 size: 30.\r\t\t\t\t\t\t\ttmp40 := (tmp46 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp40\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp40.\r\t\t\t\t\t\t\ttmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 2) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp47 := RTEllipse new.\r\t\t\t\t\t\t\ttmp47 size: 30.\r\t\t\t\t\t\t\ttmp42 := (tmp47 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp42 translateTo: 5 atRandom @ 5 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp42.\r\t\t\t\t\t\t\ttmp43 := RTLine edgeFrom: tmp40 to: tmp41.\r\t\t\t\t\t\t\ttmp39 := RTLine edgeFrom: tmp42 to: tmp41.\r\t\t\t\t\t\t\ttmp1\r\t\t\t\t\t\t\t\tadd: tmp43;\r\t\t\t\t\t\t\t\tadd: tmp39.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp41;\r\t\t\t\t\t\t\t\taddNode: tmp40;\r\t\t\t\t\t\t\t\taddEdge: tmp43;\r\t\t\t\t\t\t\t\taddNode: tmp42;\r\t\t\t\t\t\t\t\taddEdge: tmp39 ] ].\r\t\t\ttmp1 ]',			#stamp : '',			#package : #''		}	}}OmEntry {	#tags : {		#author : 'DamjanManojlovic',		#time : DateAndTime [ '2021-06-25T17:49:42.602301+02:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'RTView subclass: #SimulationView\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'\'',				#superclassName : 'RTView',				#traitCompositionSource : '{}'			},			#name : #SimulationView,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'SimulationView class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'SimulationView class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SimulationView,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #'',			#package : #'',			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'DamjanManojlovic',		#time : DateAndTime [ '2021-06-25T17:49:58.353301+02:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SimulationView,				#isMetaSide : false			},			#name : #initView,			#protocol : #'as yet unclassified',			#sourceCode : 'initView\r\t| tmp1 tmp2 tmp3 tmp5 tmp6 |\r\ttmp1 := RTView new.\r\ttmp1 @ RTDraggableView.\r\ttmp2 := RTSpringLayoutStepping new view: tmp1.\r\ttmp2 after: [ tmp1 canvas camera focusOnCenter ].\r\ttmp1 addAnimation: tmp2.\r\ttmp3 := tmp1 canvas.\r\ttmp3\r\t\taddMenu: \'To the end\'\r\t\t\tcallback:\r\t\t\t\t[ | tmp8 tmp9 tmp10 tmp11 tmp12 tmp13 tmp14 tmp15 tmp16 tmp17 tmp18 tmp20 tmp21 tmp22 tmp23 tmp24 |\r\t\t\ttmp10 := ZnClient new.\r\t\t\ttmp10\r\t\t\t\turl: \'http://localhost:8080/toTheEnd\';\r\t\t\t\tenforceHttpSuccess: true;\r\t\t\t\taccept: ZnMimeType applicationJson;\r\t\t\t\ttimeout: 1000;\r\t\t\t\tcontentReader: [ :arg1 | NeoJSONReader fromString: arg1 contents ].\r\t\t\ttmp8 := tmp10 get.\r\t\t\ttmp6 := tmp1 elements size.\r\t\t\ttmp6 ~= 0\r\t\t\t\tifTrue: [ tmp9 := tmp6 - 1.\r\t\t\t\t\ttmp15 := tmp9.\r\t\t\t\t\ttmp17 := tmp15.\r\t\t\t\t\ttmp18 := tmp17.\r\t\t\t\t\t1 to: tmp18 do: [ :tmp19 | (tmp1 elements at: tmp6 - tmp19) remove ].\r\t\t\t\t\ttmp1 elements atRandom remove ].\r\t\t\ttmp16 := Transcript.\r\t\t\ttmp16\r\t\t\t\tshow: \'Epoche: \';\r\t\t\t\tshow: (tmp8 at: #currentEpoch);\r\t\t\t\tshow: \'/\'.\r\t\t\ttmp11 := Transcript.\r\t\t\ttmp11\r\t\t\t\tshow: (tmp8 at: #finalEpoch);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of good individuals: \'.\r\t\t\ttmp12 := Transcript.\r\t\t\ttmp12\r\t\t\t\tshow: (tmp8 at: #NumberOfGood);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of bad individuals: \'.\r\t\t\ttmp13 := Transcript.\r\t\t\ttmp13\r\t\t\t\tshow: (tmp8 at: #NumberOfBad);\r\t\t\t\tcr.\r\t\t\ttmp14 := Transcript.\r\t\t\ttmp14\r\t\t\t\tshow: \'-----------------------------------------------\';\r\t\t\t\tcr.\r\t\t\t(tmp8 at: #foodSources)\r\t\t\t\tdo: [ :arg2 | \r\t\t\t\t\t| tmp25 tmp26 tmp27 tmp28 |\r\t\t\t\t\ttmp25 := RTEllipse new.\r\t\t\t\t\ttmp25 size: 30.\r\t\t\t\t\ttmp24 := (tmp25 color: (Color green alpha: 0.4)) element.\r\t\t\t\t\ttmp24\r\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\ttmp1 add: tmp24.\r\t\t\t\t\t(arg2 at: #Occupied) = 0\r\t\t\t\t\t\tifTrue: [ tmp2 addNode: tmp24 ].\r\t\t\t\t\t(arg2 at: #Occupied) = 1\r\t\t\t\t\t\tifTrue: [ tmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp26 := RTEllipse new.\r\t\t\t\t\t\t\ttmp26 size: 30.\r\t\t\t\t\t\t\ttmp23 := (tmp26 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp23\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp23.\r\t\t\t\t\t\t\ttmp20 := RTLine edgeFrom: tmp23 to: tmp24.\r\t\t\t\t\t\t\ttmp1 add: tmp20.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp24;\r\t\t\t\t\t\t\t\taddNode: tmp23;\r\t\t\t\t\t\t\t\taddEdge: tmp20 ].\r\t\t\t\t\t(arg2 at: #Occupied) = 2\r\t\t\t\t\t\tifTrue: [ tmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp27 := RTEllipse new.\r\t\t\t\t\t\t\ttmp27 size: 30.\r\t\t\t\t\t\t\ttmp23 := (tmp27 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp23\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp23.\r\t\t\t\t\t\t\ttmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 2) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp28 := RTEllipse new.\r\t\t\t\t\t\t\ttmp28 size: 30.\r\t\t\t\t\t\t\ttmp22 := (tmp28 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp22\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 5 atRandom @ 5 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp22.\r\t\t\t\t\t\t\ttmp20 := RTLine edgeFrom: tmp23 to: tmp24.\r\t\t\t\t\t\t\ttmp21 := RTLine edgeFrom: tmp22 to: tmp24.\r\t\t\t\t\t\t\ttmp1\r\t\t\t\t\t\t\t\tadd: tmp20;\r\t\t\t\t\t\t\t\tadd: tmp21.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp24;\r\t\t\t\t\t\t\t\taddNode: tmp23;\r\t\t\t\t\t\t\t\taddEdge: tmp20;\r\t\t\t\t\t\t\t\taddNode: tmp22;\r\t\t\t\t\t\t\t\taddEdge: tmp21 ] ].\r\t\t\ttmp1 signalUpdate ];\r\t\taddMenu: \'Next day\'\r\t\t\tcallback:\r\t\t\t\t[ | tmp30 tmp31 tmp32 tmp33 tmp34 tmp35 tmp36 tmp37 tmp38 tmp39 tmp40 tmp42 tmp43 tmp44 tmp45 tmp46 |\r\t\t\ttmp32 := ZnClient new.\r\t\t\ttmp32\r\t\t\t\turl: \'http://localhost:8080/nextEpoch\';\r\t\t\t\tenforceHttpSuccess: true;\r\t\t\t\taccept: ZnMimeType applicationJson;\r\t\t\t\tcontentReader: [ :arg3 | NeoJSONReader fromString: arg3 contents ].\r\t\t\ttmp30 := tmp32 get.\r\t\t\ttmp6 := tmp1 elements size.\r\t\t\ttmp6 ~= 0\r\t\t\t\tifTrue: [ tmp31 := tmp6 - 1.\r\t\t\t\t\ttmp37 := tmp31.\r\t\t\t\t\ttmp39 := tmp37.\r\t\t\t\t\ttmp40 := tmp39.\r\t\t\t\t\t1 to: tmp40 do: [ :tmp41 | (tmp1 elements at: tmp6 - tmp41) remove ].\r\t\t\t\t\ttmp1 elements atRandom remove ].\r\t\t\ttmp38 := Transcript.\r\t\t\ttmp38\r\t\t\t\tshow: \'Epoche: \';\r\t\t\t\tshow: (tmp30 at: #currentEpoch);\r\t\t\t\tshow: \'/\'.\r\t\t\ttmp33 := Transcript.\r\t\t\ttmp33\r\t\t\t\tshow: (tmp30 at: #finalEpoch);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of good individuals: \'.\r\t\t\ttmp34 := Transcript.\r\t\t\ttmp34\r\t\t\t\tshow: (tmp30 at: #NumberOfGood);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of bad individuals: \'.\r\t\t\ttmp35 := Transcript.\r\t\t\ttmp35\r\t\t\t\tshow: (tmp30 at: #NumberOfBad);\r\t\t\t\tcr.\r\t\t\ttmp36 := Transcript.\r\t\t\ttmp36\r\t\t\t\tshow: \'-----------------------------------------------\';\r\t\t\t\tcr.\r\t\t\t(tmp30 at: #foodSources)\r\t\t\t\tdo: [ :arg4 | \r\t\t\t\t\t| tmp47 tmp48 tmp49 tmp50 |\r\t\t\t\t\ttmp47 := RTEllipse new.\r\t\t\t\t\ttmp47 size: 30.\r\t\t\t\t\ttmp46 := (tmp47 color: (Color green alpha: 0.4)) element.\r\t\t\t\t\ttmp46\r\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\ttmp1 add: tmp46.\r\t\t\t\t\t(arg4 at: #Occupied) = 0\r\t\t\t\t\t\tifTrue: [ tmp2 addNode: tmp46 ].\r\t\t\t\t\t(arg4 at: #Occupied) = 1\r\t\t\t\t\t\tifTrue: [ tmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp48 := RTEllipse new.\r\t\t\t\t\t\t\ttmp48 size: 30.\r\t\t\t\t\t\t\ttmp43 := (tmp48 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp43\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp43.\r\t\t\t\t\t\t\ttmp45 := RTLine edgeFrom: tmp43 to: tmp46.\r\t\t\t\t\t\t\ttmp1 add: tmp45.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp46;\r\t\t\t\t\t\t\t\taddNode: tmp43;\r\t\t\t\t\t\t\t\taddEdge: tmp45 ].\r\t\t\t\t\t(arg4 at: #Occupied) = 2\r\t\t\t\t\t\tifTrue: [ tmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp49 := RTEllipse new.\r\t\t\t\t\t\t\ttmp49 size: 30.\r\t\t\t\t\t\t\ttmp43 := (tmp49 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp43\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp43.\r\t\t\t\t\t\t\ttmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 2) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp50 := RTEllipse new.\r\t\t\t\t\t\t\ttmp50 size: 30.\r\t\t\t\t\t\t\ttmp42 := (tmp50 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp42 translateTo: 5 atRandom @ 5 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp42.\r\t\t\t\t\t\t\ttmp45 := RTLine edgeFrom: tmp43 to: tmp46.\r\t\t\t\t\t\t\ttmp44 := RTLine edgeFrom: tmp42 to: tmp46.\r\t\t\t\t\t\t\ttmp1\r\t\t\t\t\t\t\t\tadd: tmp45;\r\t\t\t\t\t\t\t\tadd: tmp44.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp46;\r\t\t\t\t\t\t\t\taddNode: tmp43;\r\t\t\t\t\t\t\t\taddEdge: tmp45;\r\t\t\t\t\t\t\t\taddNode: tmp42;\r\t\t\t\t\t\t\t\taddEdge: tmp44 ] ].\r\t\t\ttmp1 ]',			#stamp : '',			#package : #''		}	}}OmEntry {	#tags : {		#author : 'DamjanManojlovic',		#time : DateAndTime [ '2021-06-25T17:50:12.410301+02:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpCompositeRefactoring {		#childrenRefactorings : [ ]	}}OmEntry {	#tags : {		#author : 'DamjanManojlovic',		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ],		#time : DateAndTime [ '2021-06-25T17:50:12.453301+02:00' ],		#trigger : @3	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SimulationView,				#isMetaSide : false			},			#name : #initView,			#protocol : #'as yet unclassified',			#sourceCode : 'initView\r\t| tmp1 tmp2 tmp3 tmp5 tmp6 |\r\ttmp1 := RTView new.\r\ttmp1 @ RTDraggableView.\r\ttmp2 := RTSpringLayoutStepping new view: tmp1.\r\ttmp2 after: [ tmp1 canvas camera focusOnCenter ].\r\ttmp1 addAnimation: tmp2.\r\ttmp3 := tmp1 canvas.\r\ttmp3\r\t\taddMenu: \'To the end\'\r\t\t\tcallback:\r\t\t\t\t[ | tmp8 tmp9 tmp10 tmp11 tmp12 tmp13 tmp14 tmp15 tmp16 tmp17 tmp18 tmp19 tmp21 tmp22 tmp23 tmp24 tmp25 |\r\t\t\ttmp10 := ZnClient new.\r\t\t\ttmp10\r\t\t\t\turl: \'http://localhost:8080/toTheEnd\';\r\t\t\t\tenforceHttpSuccess: true;\r\t\t\t\taccept: ZnMimeType applicationJson;\r\t\t\t\ttimeout: 1000;\r\t\t\t\tcontentReader: [ :arg1 | NeoJSONReader fromString: arg1 contents ].\r\t\t\ttmp8 := tmp10 get.\r\t\t\ttmp6 := tmp1 elements size.\r\t\t\ttmp6 ~= 0\r\t\t\t\tifTrue: [ tmp9 := tmp6 - 1.\r\t\t\t\t\ttmp15 := tmp9.\r\t\t\t\t\ttmp17 := tmp15.\r\t\t\t\t\ttmp18 := tmp17.\r\t\t\t\t\ttmp19 := tmp18.\r\t\t\t\t\t1 to: tmp19 do: [ :tmp20 | (tmp1 elements at: tmp6 - tmp20) remove ].\r\t\t\t\t\ttmp1 elements atRandom remove ].\r\t\t\ttmp16 := Transcript.\r\t\t\ttmp16\r\t\t\t\tshow: \'Epoche: \';\r\t\t\t\tshow: (tmp8 at: #currentEpoch);\r\t\t\t\tshow: \'/\'.\r\t\t\ttmp11 := Transcript.\r\t\t\ttmp11\r\t\t\t\tshow: (tmp8 at: #finalEpoch);\r\t\t\t\tcr.\r\t\t\ttmp12 := Transcript.\r\t\t\ttmp12\r\t\t\t\tshow: (tmp8 at: #NumberOfGood);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of bad individuals: \'.\r\t\t\ttmp13 := Transcript.\r\t\t\ttmp13\r\t\t\t\tshow: (tmp8 at: #NumberOfBad);\r\t\t\t\tcr.\r\t\t\ttmp14 := Transcript.\r\t\t\ttmp14\r\t\t\t\tshow: \'-----------------------------------------------\';\r\t\t\t\tcr.\r\t\t\t(tmp8 at: #foodSources)\r\t\t\t\tdo: [ :arg2 | \r\t\t\t\t\t| tmp26 tmp27 tmp28 tmp29 |\r\t\t\t\t\ttmp26 := RTEllipse new.\r\t\t\t\t\ttmp26 size: 30.\r\t\t\t\t\ttmp23 := (tmp26 color: (Color green alpha: 0.4)) element.\r\t\t\t\t\ttmp23\r\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\ttmp1 add: tmp23.\r\t\t\t\t\t(arg2 at: #Occupied) = 0\r\t\t\t\t\t\tifTrue: [ tmp2 addNode: tmp23 ].\r\t\t\t\t\t(arg2 at: #Occupied) = 1\r\t\t\t\t\t\tifTrue: [ tmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp27 := RTEllipse new.\r\t\t\t\t\t\t\ttmp27 size: 30.\r\t\t\t\t\t\t\ttmp21 := (tmp27 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp21\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp21.\r\t\t\t\t\t\t\ttmp25 := RTLine edgeFrom: tmp21 to: tmp23.\r\t\t\t\t\t\t\ttmp1 add: tmp25.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp23;\r\t\t\t\t\t\t\t\taddNode: tmp21;\r\t\t\t\t\t\t\t\taddEdge: tmp25 ].\r\t\t\t\t\t(arg2 at: #Occupied) = 2\r\t\t\t\t\t\tifTrue: [ tmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp28 := RTEllipse new.\r\t\t\t\t\t\t\ttmp28 size: 30.\r\t\t\t\t\t\t\ttmp21 := (tmp28 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp21\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp21.\r\t\t\t\t\t\t\ttmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 2) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp29 := RTEllipse new.\r\t\t\t\t\t\t\ttmp29 size: 30.\r\t\t\t\t\t\t\ttmp24 := (tmp29 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp24\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 5 atRandom @ 5 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp24.\r\t\t\t\t\t\t\ttmp25 := RTLine edgeFrom: tmp21 to: tmp23.\r\t\t\t\t\t\t\ttmp22 := RTLine edgeFrom: tmp24 to: tmp23.\r\t\t\t\t\t\t\ttmp1\r\t\t\t\t\t\t\t\tadd: tmp25;\r\t\t\t\t\t\t\t\tadd: tmp22.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp23;\r\t\t\t\t\t\t\t\taddNode: tmp21;\r\t\t\t\t\t\t\t\taddEdge: tmp25;\r\t\t\t\t\t\t\t\taddNode: tmp24;\r\t\t\t\t\t\t\t\taddEdge: tmp22 ] ].\r\t\t\ttmp1 signalUpdate ];\r\t\taddMenu: \'Next day\'\r\t\t\tcallback:\r\t\t\t\t[ | tmp31 tmp32 tmp33 tmp34 tmp35 tmp36 tmp37 tmp38 tmp39 tmp40 tmp41 tmp42 tmp44 tmp45 tmp46 tmp47 tmp48 |\r\t\t\ttmp33 := ZnClient new.\r\t\t\ttmp33\r\t\t\t\turl: \'http://localhost:8080/nextEpoch\';\r\t\t\t\tenforceHttpSuccess: true;\r\t\t\t\taccept: ZnMimeType applicationJson;\r\t\t\t\tcontentReader: [ :arg3 | NeoJSONReader fromString: arg3 contents ].\r\t\t\ttmp31 := tmp33 get.\r\t\t\ttmp6 := tmp1 elements size.\r\t\t\ttmp6 ~= 0\r\t\t\t\tifTrue: [ tmp32 := tmp6 - 1.\r\t\t\t\t\ttmp38 := tmp32.\r\t\t\t\t\ttmp40 := tmp38.\r\t\t\t\t\ttmp41 := tmp40.\r\t\t\t\t\ttmp42 := tmp41.\r\t\t\t\t\t1 to: tmp42 do: [ :tmp43 | (tmp1 elements at: tmp6 - tmp43) remove ].\r\t\t\t\t\ttmp1 elements atRandom remove ].\r\t\t\ttmp39 := Transcript.\r\t\t\ttmp39\r\t\t\t\tshow: \'Epoche: \';\r\t\t\t\tshow: (tmp31 at: #currentEpoch);\r\t\t\t\tshow: \'/\'.\r\t\t\ttmp34 := Transcript.\r\t\t\ttmp34\r\t\t\t\tshow: (tmp31 at: #finalEpoch);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of good individuals: \'.\r\t\t\ttmp35 := Transcript.\r\t\t\ttmp35\r\t\t\t\tshow: (tmp31 at: #NumberOfGood);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of bad individuals: \'.\r\t\t\ttmp36 := Transcript.\r\t\t\ttmp36\r\t\t\t\tshow: (tmp31 at: #NumberOfBad);\r\t\t\t\tcr.\r\t\t\ttmp37 := Transcript.\r\t\t\ttmp37\r\t\t\t\tshow: \'-----------------------------------------------\';\r\t\t\t\tcr.\r\t\t\t(tmp31 at: #foodSources)\r\t\t\t\tdo: [ :arg4 | \r\t\t\t\t\t| tmp49 tmp50 tmp51 tmp52 |\r\t\t\t\t\ttmp49 := RTEllipse new.\r\t\t\t\t\ttmp49 size: 30.\r\t\t\t\t\ttmp44 := (tmp49 color: (Color green alpha: 0.4)) element.\r\t\t\t\t\ttmp44\r\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\ttmp1 add: tmp44.\r\t\t\t\t\t(arg4 at: #Occupied) = 0\r\t\t\t\t\t\tifTrue: [ tmp2 addNode: tmp44 ].\r\t\t\t\t\t(arg4 at: #Occupied) = 1\r\t\t\t\t\t\tifTrue: [ tmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp50 := RTEllipse new.\r\t\t\t\t\t\t\ttmp50 size: 30.\r\t\t\t\t\t\t\ttmp48 := (tmp50 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp48\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp48.\r\t\t\t\t\t\t\ttmp47 := RTLine edgeFrom: tmp48 to: tmp44.\r\t\t\t\t\t\t\ttmp1 add: tmp47.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp44;\r\t\t\t\t\t\t\t\taddNode: tmp48;\r\t\t\t\t\t\t\t\taddEdge: tmp47 ].\r\t\t\t\t\t(arg4 at: #Occupied) = 2\r\t\t\t\t\t\tifTrue: [ tmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp51 := RTEllipse new.\r\t\t\t\t\t\t\ttmp51 size: 30.\r\t\t\t\t\t\t\ttmp48 := (tmp51 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp48\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp48.\r\t\t\t\t\t\t\ttmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 2) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp52 := RTEllipse new.\r\t\t\t\t\t\t\ttmp52 size: 30.\r\t\t\t\t\t\t\ttmp46 := (tmp52 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp46 translateTo: 5 atRandom @ 5 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp46.\r\t\t\t\t\t\t\ttmp47 := RTLine edgeFrom: tmp48 to: tmp44.\r\t\t\t\t\t\t\ttmp45 := RTLine edgeFrom: tmp46 to: tmp44.\r\t\t\t\t\t\t\ttmp1\r\t\t\t\t\t\t\t\tadd: tmp47;\r\t\t\t\t\t\t\t\tadd: tmp45.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp44;\r\t\t\t\t\t\t\t\taddNode: tmp48;\r\t\t\t\t\t\t\t\taddEdge: tmp47;\r\t\t\t\t\t\t\t\taddNode: tmp46;\r\t\t\t\t\t\t\t\taddEdge: tmp45 ] ].\r\t\t\ttmp1 ]',			#stamp : '',			#package : #''		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SimulationView,				#isMetaSide : false			},			#name : #initView,			#protocol : #accessing,			#sourceCode : 'initView\r\t| tmp1 tmp2 tmp3 tmp5 tmp6 |\r\ttmp1 := RTView new.\r\ttmp1 @ RTDraggableView.\r\ttmp2 := RTSpringLayoutStepping new view: tmp1.\r\ttmp2 after: [ tmp1 canvas camera focusOnCenter ].\r\ttmp1 addAnimation: tmp2.\r\ttmp3 := tmp1 canvas.\r\ttmp3\r\t\taddMenu: \'To the end\'\r\t\t\tcallback:\r\t\t\t\t[ | tmp8 tmp9 tmp10 tmp11 tmp12 tmp13 tmp14 tmp15 tmp16 tmp17 tmp18 tmp19 tmp21 tmp22 tmp23 tmp24 tmp25 |\r\t\t\ttmp10 := ZnClient new.\r\t\t\ttmp10\r\t\t\t\turl: \'http://localhost:8080/toTheEnd\';\r\t\t\t\tenforceHttpSuccess: true;\r\t\t\t\taccept: ZnMimeType applicationJson;\r\t\t\t\ttimeout: 1000;\r\t\t\t\tcontentReader: [ :arg1 | NeoJSONReader fromString: arg1 contents ].\r\t\t\ttmp8 := tmp10 get.\r\t\t\ttmp6 := tmp1 elements size.\r\t\t\ttmp6 ~= 0\r\t\t\t\tifTrue: [ tmp9 := tmp6 - 1.\r\t\t\t\t\ttmp15 := tmp9.\r\t\t\t\t\ttmp17 := tmp15.\r\t\t\t\t\ttmp18 := tmp17.\r\t\t\t\t\ttmp19 := tmp18.\r\t\t\t\t\t1 to: tmp19 do: [ :tmp20 | (tmp1 elements at: tmp6 - tmp20) remove ].\r\t\t\t\t\ttmp1 elements atRandom remove ].\r\t\t\ttmp16 := Transcript.\r\t\t\ttmp16\r\t\t\t\tshow: \'Epoche: \';\r\t\t\t\tshow: (tmp8 at: #currentEpoch);\r\t\t\t\tshow: \'/\'.\r\t\t\ttmp11 := Transcript.\r\t\t\ttmp11\r\t\t\t\tshow: (tmp8 at: #finalEpoch);\r\t\t\t\tcr.\r\t\t\ttmp12 := Transcript.\r\t\t\ttmp12\r\t\t\t\tshow: (tmp8 at: #NumberOfGood);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of bad individuals: \'.\r\t\t\ttmp13 := Transcript.\r\t\t\ttmp13\r\t\t\t\tshow: (tmp8 at: #NumberOfBad);\r\t\t\t\tcr.\r\t\t\ttmp14 := Transcript.\r\t\t\ttmp14\r\t\t\t\tshow: \'-----------------------------------------------\';\r\t\t\t\tcr.\r\t\t\t(tmp8 at: #foodSources)\r\t\t\t\tdo: [ :arg2 | \r\t\t\t\t\t| tmp26 tmp27 tmp28 tmp29 |\r\t\t\t\t\ttmp26 := RTEllipse new.\r\t\t\t\t\ttmp26 size: 30.\r\t\t\t\t\ttmp23 := (tmp26 color: (Color green alpha: 0.4)) element.\r\t\t\t\t\ttmp23\r\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\ttmp1 add: tmp23.\r\t\t\t\t\t(arg2 at: #Occupied) = 0\r\t\t\t\t\t\tifTrue: [ tmp2 addNode: tmp23 ].\r\t\t\t\t\t(arg2 at: #Occupied) = 1\r\t\t\t\t\t\tifTrue: [ tmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp27 := RTEllipse new.\r\t\t\t\t\t\t\ttmp27 size: 30.\r\t\t\t\t\t\t\ttmp21 := (tmp27 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp21\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp21.\r\t\t\t\t\t\t\ttmp25 := RTLine edgeFrom: tmp21 to: tmp23.\r\t\t\t\t\t\t\ttmp1 add: tmp25.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp23;\r\t\t\t\t\t\t\t\taddNode: tmp21;\r\t\t\t\t\t\t\t\taddEdge: tmp25 ].\r\t\t\t\t\t(arg2 at: #Occupied) = 2\r\t\t\t\t\t\tifTrue: [ tmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp28 := RTEllipse new.\r\t\t\t\t\t\t\ttmp28 size: 30.\r\t\t\t\t\t\t\ttmp21 := (tmp28 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp21\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp21.\r\t\t\t\t\t\t\ttmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 2) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp29 := RTEllipse new.\r\t\t\t\t\t\t\ttmp29 size: 30.\r\t\t\t\t\t\t\ttmp24 := (tmp29 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp24\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 5 atRandom @ 5 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp24.\r\t\t\t\t\t\t\ttmp25 := RTLine edgeFrom: tmp21 to: tmp23.\r\t\t\t\t\t\t\ttmp22 := RTLine edgeFrom: tmp24 to: tmp23.\r\t\t\t\t\t\t\ttmp1\r\t\t\t\t\t\t\t\tadd: tmp25;\r\t\t\t\t\t\t\t\tadd: tmp22.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp23;\r\t\t\t\t\t\t\t\taddNode: tmp21;\r\t\t\t\t\t\t\t\taddEdge: tmp25;\r\t\t\t\t\t\t\t\taddNode: tmp24;\r\t\t\t\t\t\t\t\taddEdge: tmp22 ] ].\r\t\t\ttmp1 signalUpdate ];\r\t\taddMenu: \'Next day\'\r\t\t\tcallback:\r\t\t\t\t[ | tmp31 tmp32 tmp33 tmp34 tmp35 tmp36 tmp37 tmp38 tmp39 tmp40 tmp41 tmp42 tmp44 tmp45 tmp46 tmp47 tmp48 |\r\t\t\ttmp33 := ZnClient new.\r\t\t\ttmp33\r\t\t\t\turl: \'http://localhost:8080/nextEpoch\';\r\t\t\t\tenforceHttpSuccess: true;\r\t\t\t\taccept: ZnMimeType applicationJson;\r\t\t\t\tcontentReader: [ :arg3 | NeoJSONReader fromString: arg3 contents ].\r\t\t\ttmp31 := tmp33 get.\r\t\t\ttmp6 := tmp1 elements size.\r\t\t\ttmp6 ~= 0\r\t\t\t\tifTrue: [ tmp32 := tmp6 - 1.\r\t\t\t\t\ttmp38 := tmp32.\r\t\t\t\t\ttmp40 := tmp38.\r\t\t\t\t\ttmp41 := tmp40.\r\t\t\t\t\ttmp42 := tmp41.\r\t\t\t\t\t1 to: tmp42 do: [ :tmp43 | (tmp1 elements at: tmp6 - tmp43) remove ].\r\t\t\t\t\ttmp1 elements atRandom remove ].\r\t\t\ttmp39 := Transcript.\r\t\t\ttmp39\r\t\t\t\tshow: \'Epoche: \';\r\t\t\t\tshow: (tmp31 at: #currentEpoch);\r\t\t\t\tshow: \'/\'.\r\t\t\ttmp34 := Transcript.\r\t\t\ttmp34\r\t\t\t\tshow: (tmp31 at: #finalEpoch);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of good individuals: \'.\r\t\t\ttmp35 := Transcript.\r\t\t\ttmp35\r\t\t\t\tshow: (tmp31 at: #NumberOfGood);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of bad individuals: \'.\r\t\t\ttmp36 := Transcript.\r\t\t\ttmp36\r\t\t\t\tshow: (tmp31 at: #NumberOfBad);\r\t\t\t\tcr.\r\t\t\ttmp37 := Transcript.\r\t\t\ttmp37\r\t\t\t\tshow: \'-----------------------------------------------\';\r\t\t\t\tcr.\r\t\t\t(tmp31 at: #foodSources)\r\t\t\t\tdo: [ :arg4 | \r\t\t\t\t\t| tmp49 tmp50 tmp51 tmp52 |\r\t\t\t\t\ttmp49 := RTEllipse new.\r\t\t\t\t\ttmp49 size: 30.\r\t\t\t\t\ttmp44 := (tmp49 color: (Color green alpha: 0.4)) element.\r\t\t\t\t\ttmp44\r\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\ttmp1 add: tmp44.\r\t\t\t\t\t(arg4 at: #Occupied) = 0\r\t\t\t\t\t\tifTrue: [ tmp2 addNode: tmp44 ].\r\t\t\t\t\t(arg4 at: #Occupied) = 1\r\t\t\t\t\t\tifTrue: [ tmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp50 := RTEllipse new.\r\t\t\t\t\t\t\ttmp50 size: 30.\r\t\t\t\t\t\t\ttmp48 := (tmp50 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp48\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp48.\r\t\t\t\t\t\t\ttmp47 := RTLine edgeFrom: tmp48 to: tmp44.\r\t\t\t\t\t\t\ttmp1 add: tmp47.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp44;\r\t\t\t\t\t\t\t\taddNode: tmp48;\r\t\t\t\t\t\t\t\taddEdge: tmp47 ].\r\t\t\t\t\t(arg4 at: #Occupied) = 2\r\t\t\t\t\t\tifTrue: [ tmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp51 := RTEllipse new.\r\t\t\t\t\t\t\ttmp51 size: 30.\r\t\t\t\t\t\t\ttmp48 := (tmp51 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp48\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp48.\r\t\t\t\t\t\t\ttmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 2) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp52 := RTEllipse new.\r\t\t\t\t\t\t\ttmp52 size: 30.\r\t\t\t\t\t\t\ttmp46 := (tmp52 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp46 translateTo: 5 atRandom @ 5 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp46.\r\t\t\t\t\t\t\ttmp47 := RTLine edgeFrom: tmp48 to: tmp44.\r\t\t\t\t\t\t\ttmp45 := RTLine edgeFrom: tmp46 to: tmp44.\r\t\t\t\t\t\t\ttmp1\r\t\t\t\t\t\t\t\tadd: tmp47;\r\t\t\t\t\t\t\t\tadd: tmp45.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp44;\r\t\t\t\t\t\t\t\taddNode: tmp48;\r\t\t\t\t\t\t\t\taddEdge: tmp47;\r\t\t\t\t\t\t\t\taddNode: tmp46;\r\t\t\t\t\t\t\t\taddEdge: tmp45 ] ].\r\t\t\ttmp1 ]',			#stamp : '',			#package : #''		}	}}OmEntry {	#tags : {		#author : 'DamjanManojlovic',		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ],		#time : DateAndTime [ '2021-06-25T17:50:12.554301+02:00' ],		#trigger : OmReference [ '14' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SimulationView,				#isMetaSide : false			},			#name : #initView,			#protocol : #accessing,			#sourceCode : 'initView\r\t| tmp1 tmp2 tmp3 tmp5 tmp6 |\r\ttmp1 := RTView new.\r\ttmp1 @ RTDraggableView.\r\ttmp2 := RTSpringLayoutStepping new view: tmp1.\r\ttmp2 after: [ tmp1 canvas camera focusOnCenter ].\r\ttmp1 addAnimation: tmp2.\r\ttmp3 := tmp1 canvas.\r\ttmp3\r\t\taddMenu: \'To the end\'\r\t\t\tcallback:\r\t\t\t\t[ | tmp8 tmp9 tmp10 tmp11 tmp12 tmp13 tmp14 tmp15 tmp16 tmp17 tmp18 tmp20 tmp21 tmp22 tmp23 tmp24 |\r\t\t\ttmp10 := ZnClient new.\r\t\t\ttmp10\r\t\t\t\turl: \'http://localhost:8080/toTheEnd\';\r\t\t\t\tenforceHttpSuccess: true;\r\t\t\t\taccept: ZnMimeType applicationJson;\r\t\t\t\ttimeout: 1000;\r\t\t\t\tcontentReader: [ :arg1 | NeoJSONReader fromString: arg1 contents ].\r\t\t\ttmp8 := tmp10 get.\r\t\t\ttmp6 := tmp1 elements size.\r\t\t\ttmp6 ~= 0\r\t\t\t\tifTrue: [ tmp9 := tmp6 - 1.\r\t\t\t\t\ttmp15 := tmp9.\r\t\t\t\t\ttmp17 := tmp15.\r\t\t\t\t\ttmp18 := tmp17.\r\t\t\t\t\t1 to: tmp18 do: [ :tmp19 | (tmp1 elements at: tmp6 - tmp19) remove ].\r\t\t\t\t\ttmp1 elements atRandom remove ].\r\t\t\ttmp16 := Transcript.\r\t\t\ttmp16\r\t\t\t\tshow: \'Epoche: \';\r\t\t\t\tshow: (tmp8 at: #currentEpoch);\r\t\t\t\tshow: \'/\'.\r\t\t\ttmp11 := Transcript.\r\t\t\ttmp11\r\t\t\t\tshow: (tmp8 at: #finalEpoch);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of good individuals: \'.\r\t\t\ttmp12 := Transcript.\r\t\t\ttmp12\r\t\t\t\tshow: (tmp8 at: #NumberOfGood);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of bad individuals: \'.\r\t\t\ttmp13 := Transcript.\r\t\t\ttmp13\r\t\t\t\tshow: (tmp8 at: #NumberOfBad);\r\t\t\t\tcr.\r\t\t\ttmp14 := Transcript.\r\t\t\ttmp14\r\t\t\t\tshow: \'-----------------------------------------------\';\r\t\t\t\tcr.\r\t\t\t(tmp8 at: #foodSources)\r\t\t\t\tdo: [ :arg2 | \r\t\t\t\t\t| tmp25 tmp26 tmp27 tmp28 |\r\t\t\t\t\ttmp25 := RTEllipse new.\r\t\t\t\t\ttmp25 size: 30.\r\t\t\t\t\ttmp24 := (tmp25 color: (Color green alpha: 0.4)) element.\r\t\t\t\t\ttmp24\r\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\ttmp1 add: tmp24.\r\t\t\t\t\t(arg2 at: #Occupied) = 0\r\t\t\t\t\t\tifTrue: [ tmp2 addNode: tmp24 ].\r\t\t\t\t\t(arg2 at: #Occupied) = 1\r\t\t\t\t\t\tifTrue: [ tmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp26 := RTEllipse new.\r\t\t\t\t\t\t\ttmp26 size: 30.\r\t\t\t\t\t\t\ttmp23 := (tmp26 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp23\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp23.\r\t\t\t\t\t\t\ttmp20 := RTLine edgeFrom: tmp23 to: tmp24.\r\t\t\t\t\t\t\ttmp1 add: tmp20.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp24;\r\t\t\t\t\t\t\t\taddNode: tmp23;\r\t\t\t\t\t\t\t\taddEdge: tmp20 ].\r\t\t\t\t\t(arg2 at: #Occupied) = 2\r\t\t\t\t\t\tifTrue: [ tmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp27 := RTEllipse new.\r\t\t\t\t\t\t\ttmp27 size: 30.\r\t\t\t\t\t\t\ttmp23 := (tmp27 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp23\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp23.\r\t\t\t\t\t\t\ttmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 2) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp28 := RTEllipse new.\r\t\t\t\t\t\t\ttmp28 size: 30.\r\t\t\t\t\t\t\ttmp22 := (tmp28 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp22\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 5 atRandom @ 5 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp22.\r\t\t\t\t\t\t\ttmp20 := RTLine edgeFrom: tmp23 to: tmp24.\r\t\t\t\t\t\t\ttmp21 := RTLine edgeFrom: tmp22 to: tmp24.\r\t\t\t\t\t\t\ttmp1\r\t\t\t\t\t\t\t\tadd: tmp20;\r\t\t\t\t\t\t\t\tadd: tmp21.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp24;\r\t\t\t\t\t\t\t\taddNode: tmp23;\r\t\t\t\t\t\t\t\taddEdge: tmp20;\r\t\t\t\t\t\t\t\taddNode: tmp22;\r\t\t\t\t\t\t\t\taddEdge: tmp21 ] ].\r\t\t\ttmp1 signalUpdate ];\r\t\taddMenu: \'Next day\'\r\t\t\tcallback:\r\t\t\t\t[ | tmp30 tmp31 tmp32 tmp33 tmp34 tmp35 tmp36 tmp37 tmp38 tmp39 tmp40 tmp42 tmp43 tmp44 tmp45 tmp46 |\r\t\t\ttmp32 := ZnClient new.\r\t\t\ttmp32\r\t\t\t\turl: \'http://localhost:8080/nextEpoch\';\r\t\t\t\tenforceHttpSuccess: true;\r\t\t\t\taccept: ZnMimeType applicationJson;\r\t\t\t\tcontentReader: [ :arg3 | NeoJSONReader fromString: arg3 contents ].\r\t\t\ttmp30 := tmp32 get.\r\t\t\ttmp6 := tmp1 elements size.\r\t\t\ttmp6 ~= 0\r\t\t\t\tifTrue: [ tmp31 := tmp6 - 1.\r\t\t\t\t\ttmp37 := tmp31.\r\t\t\t\t\ttmp39 := tmp37.\r\t\t\t\t\ttmp40 := tmp39.\r\t\t\t\t\t1 to: tmp40 do: [ :tmp41 | (tmp1 elements at: tmp6 - tmp41) remove ].\r\t\t\t\t\ttmp1 elements atRandom remove ].\r\t\t\ttmp38 := Transcript.\r\t\t\ttmp38\r\t\t\t\tshow: \'Epoche: \';\r\t\t\t\tshow: (tmp30 at: #currentEpoch);\r\t\t\t\tshow: \'/\'.\r\t\t\ttmp33 := Transcript.\r\t\t\ttmp33\r\t\t\t\tshow: (tmp30 at: #finalEpoch);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of good individuals: \'.\r\t\t\ttmp34 := Transcript.\r\t\t\ttmp34\r\t\t\t\tshow: (tmp30 at: #NumberOfGood);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of bad individuals: \'.\r\t\t\ttmp35 := Transcript.\r\t\t\ttmp35\r\t\t\t\tshow: (tmp30 at: #NumberOfBad);\r\t\t\t\tcr.\r\t\t\ttmp36 := Transcript.\r\t\t\ttmp36\r\t\t\t\tshow: \'-----------------------------------------------\';\r\t\t\t\tcr.\r\t\t\t(tmp30 at: #foodSources)\r\t\t\t\tdo: [ :arg4 | \r\t\t\t\t\t| tmp47 tmp48 tmp49 tmp50 |\r\t\t\t\t\ttmp47 := RTEllipse new.\r\t\t\t\t\ttmp47 size: 30.\r\t\t\t\t\ttmp46 := (tmp47 color: (Color green alpha: 0.4)) element.\r\t\t\t\t\ttmp46\r\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\ttmp1 add: tmp46.\r\t\t\t\t\t(arg4 at: #Occupied) = 0\r\t\t\t\t\t\tifTrue: [ tmp2 addNode: tmp46 ].\r\t\t\t\t\t(arg4 at: #Occupied) = 1\r\t\t\t\t\t\tifTrue: [ tmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp48 := RTEllipse new.\r\t\t\t\t\t\t\ttmp48 size: 30.\r\t\t\t\t\t\t\ttmp43 := (tmp48 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp43\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp43.\r\t\t\t\t\t\t\ttmp45 := RTLine edgeFrom: tmp43 to: tmp46.\r\t\t\t\t\t\t\ttmp1 add: tmp45.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp46;\r\t\t\t\t\t\t\t\taddNode: tmp43;\r\t\t\t\t\t\t\t\taddEdge: tmp45 ].\r\t\t\t\t\t(arg4 at: #Occupied) = 2\r\t\t\t\t\t\tifTrue: [ tmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp49 := RTEllipse new.\r\t\t\t\t\t\t\ttmp49 size: 30.\r\t\t\t\t\t\t\ttmp43 := (tmp49 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp43\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp43.\r\t\t\t\t\t\t\ttmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 2) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp50 := RTEllipse new.\r\t\t\t\t\t\t\ttmp50 size: 30.\r\t\t\t\t\t\t\ttmp42 := (tmp50 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp42 translateTo: 5 atRandom @ 5 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp42.\r\t\t\t\t\t\t\ttmp45 := RTLine edgeFrom: tmp43 to: tmp46.\r\t\t\t\t\t\t\ttmp44 := RTLine edgeFrom: tmp42 to: tmp46.\r\t\t\t\t\t\t\ttmp1\r\t\t\t\t\t\t\t\tadd: tmp45;\r\t\t\t\t\t\t\t\tadd: tmp44.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp46;\r\t\t\t\t\t\t\t\taddNode: tmp43;\r\t\t\t\t\t\t\t\taddEdge: tmp45;\r\t\t\t\t\t\t\t\taddNode: tmp42;\r\t\t\t\t\t\t\t\taddEdge: tmp44 ] ].\r\t\t\ttmp1 ]',			#stamp : '',			#package : #''		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SimulationView,				#isMetaSide : false			},			#name : #initView,			#protocol : #accessing,			#sourceCode : 'initView\r\t| tmp1 tmp2 tmp3 tmp5 tmp6 |\r\ttmp1 := RTView new.\r\ttmp1 @ RTDraggableView.\r\ttmp2 := RTSpringLayoutStepping new view: tmp1.\r\ttmp2 after: [ tmp1 canvas camera focusOnCenter ].\r\ttmp1 addAnimation: tmp2.\r\ttmp3 := tmp1 canvas.\r\ttmp3\r\t\taddMenu: \'To the end\'\r\t\t\tcallback:\r\t\t\t\t[ | tmp8 tmp9 tmp10 tmp11 tmp12 tmp13 tmp14 tmp15 tmp16 tmp17 tmp18 tmp19 tmp21 tmp22 tmp23 tmp24 tmp25 |\r\t\t\ttmp10 := ZnClient new.\r\t\t\ttmp10\r\t\t\t\turl: \'http://localhost:8080/toTheEnd\';\r\t\t\t\tenforceHttpSuccess: true;\r\t\t\t\taccept: ZnMimeType applicationJson;\r\t\t\t\ttimeout: 1000;\r\t\t\t\tcontentReader: [ :arg1 | NeoJSONReader fromString: arg1 contents ].\r\t\t\ttmp8 := tmp10 get.\r\t\t\ttmp6 := tmp1 elements size.\r\t\t\ttmp6 ~= 0\r\t\t\t\tifTrue: [ tmp9 := tmp6 - 1.\r\t\t\t\t\ttmp15 := tmp9.\r\t\t\t\t\ttmp17 := tmp15.\r\t\t\t\t\ttmp18 := tmp17.\r\t\t\t\t\ttmp19 := tmp18.\r\t\t\t\t\t1 to: tmp19 do: [ :tmp20 | (tmp1 elements at: tmp6 - tmp20) remove ].\r\t\t\t\t\ttmp1 elements atRandom remove ].\r\t\t\ttmp16 := Transcript.\r\t\t\ttmp16\r\t\t\t\tshow: \'Epoche: \';\r\t\t\t\tshow: (tmp8 at: #currentEpoch);\r\t\t\t\tshow: \'/\'.\r\t\t\ttmp11 := Transcript.\r\t\t\ttmp11\r\t\t\t\tshow: (tmp8 at: #finalEpoch);\r\t\t\t\tcr.\r\t\t\ttmp12 := Transcript.\r\t\t\ttmp12\r\t\t\t\tshow: (tmp8 at: #NumberOfGood);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of bad individuals: \'.\r\t\t\ttmp13 := Transcript.\r\t\t\ttmp13\r\t\t\t\tshow: (tmp8 at: #NumberOfBad);\r\t\t\t\tcr.\r\t\t\ttmp14 := Transcript.\r\t\t\ttmp14\r\t\t\t\tshow: \'-----------------------------------------------\';\r\t\t\t\tcr.\r\t\t\t(tmp8 at: #foodSources)\r\t\t\t\tdo: [ :arg2 | \r\t\t\t\t\t| tmp26 tmp27 tmp28 tmp29 |\r\t\t\t\t\ttmp26 := RTEllipse new.\r\t\t\t\t\ttmp26 size: 30.\r\t\t\t\t\ttmp23 := (tmp26 color: (Color green alpha: 0.4)) element.\r\t\t\t\t\ttmp23\r\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\ttmp1 add: tmp23.\r\t\t\t\t\t(arg2 at: #Occupied) = 0\r\t\t\t\t\t\tifTrue: [ tmp2 addNode: tmp23 ].\r\t\t\t\t\t(arg2 at: #Occupied) = 1\r\t\t\t\t\t\tifTrue: [ tmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp27 := RTEllipse new.\r\t\t\t\t\t\t\ttmp27 size: 30.\r\t\t\t\t\t\t\ttmp21 := (tmp27 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp21\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp21.\r\t\t\t\t\t\t\ttmp25 := RTLine edgeFrom: tmp21 to: tmp23.\r\t\t\t\t\t\t\ttmp1 add: tmp25.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp23;\r\t\t\t\t\t\t\t\taddNode: tmp21;\r\t\t\t\t\t\t\t\taddEdge: tmp25 ].\r\t\t\t\t\t(arg2 at: #Occupied) = 2\r\t\t\t\t\t\tifTrue: [ tmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp28 := RTEllipse new.\r\t\t\t\t\t\t\ttmp28 size: 30.\r\t\t\t\t\t\t\ttmp21 := (tmp28 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp21\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp21.\r\t\t\t\t\t\t\ttmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 2) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp29 := RTEllipse new.\r\t\t\t\t\t\t\ttmp29 size: 30.\r\t\t\t\t\t\t\ttmp24 := (tmp29 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp24\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 5 atRandom @ 5 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp24.\r\t\t\t\t\t\t\ttmp25 := RTLine edgeFrom: tmp21 to: tmp23.\r\t\t\t\t\t\t\ttmp22 := RTLine edgeFrom: tmp24 to: tmp23.\r\t\t\t\t\t\t\ttmp1\r\t\t\t\t\t\t\t\tadd: tmp25;\r\t\t\t\t\t\t\t\tadd: tmp22.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp23;\r\t\t\t\t\t\t\t\taddNode: tmp21;\r\t\t\t\t\t\t\t\taddEdge: tmp25;\r\t\t\t\t\t\t\t\taddNode: tmp24;\r\t\t\t\t\t\t\t\taddEdge: tmp22 ] ].\r\t\t\ttmp1 signalUpdate ];\r\t\taddMenu: \'Next day\'\r\t\t\tcallback:\r\t\t\t\t[ | tmp31 tmp32 tmp33 tmp34 tmp35 tmp36 tmp37 tmp38 tmp39 tmp40 tmp41 tmp42 tmp44 tmp45 tmp46 tmp47 tmp48 |\r\t\t\ttmp33 := ZnClient new.\r\t\t\ttmp33\r\t\t\t\turl: \'http://localhost:8080/nextEpoch\';\r\t\t\t\tenforceHttpSuccess: true;\r\t\t\t\taccept: ZnMimeType applicationJson;\r\t\t\t\tcontentReader: [ :arg3 | NeoJSONReader fromString: arg3 contents ].\r\t\t\ttmp31 := tmp33 get.\r\t\t\ttmp6 := tmp1 elements size.\r\t\t\ttmp6 ~= 0\r\t\t\t\tifTrue: [ tmp32 := tmp6 - 1.\r\t\t\t\t\ttmp38 := tmp32.\r\t\t\t\t\ttmp40 := tmp38.\r\t\t\t\t\ttmp41 := tmp40.\r\t\t\t\t\ttmp42 := tmp41.\r\t\t\t\t\t1 to: tmp42 do: [ :tmp43 | (tmp1 elements at: tmp6 - tmp43) remove ].\r\t\t\t\t\ttmp1 elements atRandom remove ].\r\t\t\ttmp39 := Transcript.\r\t\t\ttmp39\r\t\t\t\tshow: \'Epoche: \';\r\t\t\t\tshow: (tmp31 at: #currentEpoch);\r\t\t\t\tshow: \'/\'.\r\t\t\ttmp34 := Transcript.\r\t\t\ttmp34\r\t\t\t\tshow: (tmp31 at: #finalEpoch);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of good individuals: \'.\r\t\t\ttmp35 := Transcript.\r\t\t\ttmp35\r\t\t\t\tshow: (tmp31 at: #NumberOfGood);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of bad individuals: \'.\r\t\t\ttmp36 := Transcript.\r\t\t\ttmp36\r\t\t\t\tshow: (tmp31 at: #NumberOfBad);\r\t\t\t\tcr.\r\t\t\ttmp37 := Transcript.\r\t\t\ttmp37\r\t\t\t\tshow: \'-----------------------------------------------\';\r\t\t\t\tcr.\r\t\t\t(tmp31 at: #foodSources)\r\t\t\t\tdo: [ :arg4 | \r\t\t\t\t\t| tmp49 tmp50 tmp51 tmp52 |\r\t\t\t\t\ttmp49 := RTEllipse new.\r\t\t\t\t\ttmp49 size: 30.\r\t\t\t\t\ttmp44 := (tmp49 color: (Color green alpha: 0.4)) element.\r\t\t\t\t\ttmp44\r\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\ttmp1 add: tmp44.\r\t\t\t\t\t(arg4 at: #Occupied) = 0\r\t\t\t\t\t\tifTrue: [ tmp2 addNode: tmp44 ].\r\t\t\t\t\t(arg4 at: #Occupied) = 1\r\t\t\t\t\t\tifTrue: [ tmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp50 := RTEllipse new.\r\t\t\t\t\t\t\ttmp50 size: 30.\r\t\t\t\t\t\t\ttmp48 := (tmp50 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp48\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp48.\r\t\t\t\t\t\t\ttmp47 := RTLine edgeFrom: tmp48 to: tmp44.\r\t\t\t\t\t\t\ttmp1 add: tmp47.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp44;\r\t\t\t\t\t\t\t\taddNode: tmp48;\r\t\t\t\t\t\t\t\taddEdge: tmp47 ].\r\t\t\t\t\t(arg4 at: #Occupied) = 2\r\t\t\t\t\t\tifTrue: [ tmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp51 := RTEllipse new.\r\t\t\t\t\t\t\ttmp51 size: 30.\r\t\t\t\t\t\t\ttmp48 := (tmp51 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp48\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp48.\r\t\t\t\t\t\t\ttmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 2) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp52 := RTEllipse new.\r\t\t\t\t\t\t\ttmp52 size: 30.\r\t\t\t\t\t\t\ttmp46 := (tmp52 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp46 translateTo: 5 atRandom @ 5 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp46.\r\t\t\t\t\t\t\ttmp47 := RTLine edgeFrom: tmp48 to: tmp44.\r\t\t\t\t\t\t\ttmp45 := RTLine edgeFrom: tmp46 to: tmp44.\r\t\t\t\t\t\t\ttmp1\r\t\t\t\t\t\t\t\tadd: tmp47;\r\t\t\t\t\t\t\t\tadd: tmp45.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp44;\r\t\t\t\t\t\t\t\taddNode: tmp48;\r\t\t\t\t\t\t\t\taddEdge: tmp47;\r\t\t\t\t\t\t\t\taddNode: tmp46;\r\t\t\t\t\t\t\t\taddEdge: tmp45 ] ].\r\t\t\ttmp1 ]',			#stamp : '',			#package : #''		}	}}OmEntry {	#tags : {		#author : 'DamjanManojlovic',		#time : DateAndTime [ '2021-06-25T17:50:19.759301+02:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Manifest class',				#isMetaSide : true			},			#name : #ruleRBCodeCruftLeftInMethodsRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBCodeCruftLeftInMethodsRuleV1FalsePositive\r\t^ #(#(#(#RGClassDefinition #(#SimulationVisualsation)) #\'2021-06-25T17:44:47.542301+02:00\') #(#(#RGMethodDefinition #(#SimulationVisualsation #initView #false)) #\'2021-06-25T17:44:52.178301+02:00\'))',			#stamp : '',			#package : #''		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Manifest class',				#isMetaSide : true			},			#name : #ruleRBCodeCruftLeftInMethodsRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBCodeCruftLeftInMethodsRuleV1FalsePositive\r\t^ #(#(#(#RGClassDefinition #(#SimulationVisualsation)) #\'2021-06-25T17:44:47.542301+02:00\') #(#(#RGMethodDefinition #(#SimulationVisualsation #initView #false)) #\'2021-06-25T17:44:52.178301+02:00\') #(#(#RGMethodDefinition #(#SimulationView #initView #false)) #\'2021-06-25T17:50:19.750301+02:00\'))',			#stamp : '',			#package : #''		}	}}OmEntry {	#tags : {		#author : 'DamjanManojlovic',		#time : DateAndTime [ '2021-06-25T17:51:04.696301+02:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SimulationView,				#isMetaSide : false			},			#name : #initView,			#protocol : #accessing,			#sourceCode : 'initView\r\t| tmp1 tmp2 tmp3 tmp5 tmp6 |\r\ttmp1 := RTView new.\r\ttmp1 @ RTDraggableView.\r\ttmp2 := RTSpringLayoutStepping new view: tmp1.\r\ttmp2 after: [ tmp1 canvas camera focusOnCenter ].\r\ttmp1 addAnimation: tmp2.\r\ttmp3 := tmp1 canvas.\r\ttmp3\r\t\taddMenu: \'To the end\'\r\t\t\tcallback:\r\t\t\t\t[ | tmp8 tmp9 tmp10 tmp11 tmp12 tmp13 tmp14 tmp15 tmp16 tmp17 tmp18 tmp19 tmp21 tmp22 tmp23 tmp24 tmp25 |\r\t\t\ttmp10 := ZnClient new.\r\t\t\ttmp10\r\t\t\t\turl: \'http://localhost:8080/toTheEnd\';\r\t\t\t\tenforceHttpSuccess: true;\r\t\t\t\taccept: ZnMimeType applicationJson;\r\t\t\t\ttimeout: 1000;\r\t\t\t\tcontentReader: [ :arg1 | NeoJSONReader fromString: arg1 contents ].\r\t\t\ttmp8 := tmp10 get.\r\t\t\ttmp6 := tmp1 elements size.\r\t\t\ttmp6 ~= 0\r\t\t\t\tifTrue: [ tmp9 := tmp6 - 1.\r\t\t\t\t\ttmp15 := tmp9.\r\t\t\t\t\ttmp17 := tmp15.\r\t\t\t\t\ttmp18 := tmp17.\r\t\t\t\t\ttmp19 := tmp18.\r\t\t\t\t\t1 to: tmp19 do: [ :tmp20 | (tmp1 elements at: tmp6 - tmp20) remove ].\r\t\t\t\t\ttmp1 elements atRandom remove ].\r\t\t\ttmp16 := Transcript.\r\t\t\ttmp16\r\t\t\t\tshow: \'Epoche: \';\r\t\t\t\tshow: (tmp8 at: #currentEpoch);\r\t\t\t\tshow: \'/\'.\r\t\t\ttmp11 := Transcript.\r\t\t\ttmp11\r\t\t\t\tshow: (tmp8 at: #finalEpoch);\r\t\t\t\tcr.\r\t\t\ttmp12 := Transcript.\r\t\t\ttmp12\r\t\t\t\tshow: (tmp8 at: #NumberOfGood);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of bad individuals: \'.\r\t\t\ttmp13 := Transcript.\r\t\t\ttmp13\r\t\t\t\tshow: (tmp8 at: #NumberOfBad);\r\t\t\t\tcr.\r\t\t\ttmp14 := Transcript.\r\t\t\ttmp14\r\t\t\t\tshow: \'-----------------------------------------------\';\r\t\t\t\tcr.\r\t\t\t(tmp8 at: #foodSources)\r\t\t\t\tdo: [ :arg2 | \r\t\t\t\t\t| tmp26 tmp27 tmp28 tmp29 |\r\t\t\t\t\ttmp26 := RTEllipse new.\r\t\t\t\t\ttmp26 size: 30.\r\t\t\t\t\ttmp23 := (tmp26 color: (Color green alpha: 0.4)) element.\r\t\t\t\t\ttmp23\r\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\ttmp1 add: tmp23.\r\t\t\t\t\t(arg2 at: #Occupied) = 0\r\t\t\t\t\t\tifTrue: [ tmp2 addNode: tmp23 ].\r\t\t\t\t\t(arg2 at: #Occupied) = 1\r\t\t\t\t\t\tifTrue: [ tmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp27 := RTEllipse new.\r\t\t\t\t\t\t\ttmp27 size: 30.\r\t\t\t\t\t\t\ttmp21 := (tmp27 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp21\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp21.\r\t\t\t\t\t\t\ttmp25 := RTLine edgeFrom: tmp21 to: tmp23.\r\t\t\t\t\t\t\ttmp1 add: tmp25.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp23;\r\t\t\t\t\t\t\t\taddNode: tmp21;\r\t\t\t\t\t\t\t\taddEdge: tmp25 ].\r\t\t\t\t\t(arg2 at: #Occupied) = 2\r\t\t\t\t\t\tifTrue: [ tmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp28 := RTEllipse new.\r\t\t\t\t\t\t\ttmp28 size: 30.\r\t\t\t\t\t\t\ttmp21 := (tmp28 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp21\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp21.\r\t\t\t\t\t\t\ttmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 2) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp29 := RTEllipse new.\r\t\t\t\t\t\t\ttmp29 size: 30.\r\t\t\t\t\t\t\ttmp24 := (tmp29 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp24\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 5 atRandom @ 5 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp24.\r\t\t\t\t\t\t\ttmp25 := RTLine edgeFrom: tmp21 to: tmp23.\r\t\t\t\t\t\t\ttmp22 := RTLine edgeFrom: tmp24 to: tmp23.\r\t\t\t\t\t\t\ttmp1\r\t\t\t\t\t\t\t\tadd: tmp25;\r\t\t\t\t\t\t\t\tadd: tmp22.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp23;\r\t\t\t\t\t\t\t\taddNode: tmp21;\r\t\t\t\t\t\t\t\taddEdge: tmp25;\r\t\t\t\t\t\t\t\taddNode: tmp24;\r\t\t\t\t\t\t\t\taddEdge: tmp22 ] ].\r\t\t\ttmp1 signalUpdate ];\r\t\taddMenu: \'Next day\'\r\t\t\tcallback:\r\t\t\t\t[ | tmp31 tmp32 tmp33 tmp34 tmp35 tmp36 tmp37 tmp38 tmp39 tmp40 tmp41 tmp42 tmp44 tmp45 tmp46 tmp47 tmp48 |\r\t\t\ttmp33 := ZnClient new.\r\t\t\ttmp33\r\t\t\t\turl: \'http://localhost:8080/nextEpoch\';\r\t\t\t\tenforceHttpSuccess: true;\r\t\t\t\taccept: ZnMimeType applicationJson;\r\t\t\t\tcontentReader: [ :arg3 | NeoJSONReader fromString: arg3 contents ].\r\t\t\ttmp31 := tmp33 get.\r\t\t\ttmp6 := tmp1 elements size.\r\t\t\ttmp6 ~= 0\r\t\t\t\tifTrue: [ tmp32 := tmp6 - 1.\r\t\t\t\t\ttmp38 := tmp32.\r\t\t\t\t\ttmp40 := tmp38.\r\t\t\t\t\ttmp41 := tmp40.\r\t\t\t\t\ttmp42 := tmp41.\r\t\t\t\t\t1 to: tmp42 do: [ :tmp43 | (tmp1 elements at: tmp6 - tmp43) remove ].\r\t\t\t\t\ttmp1 elements atRandom remove ].\r\t\t\ttmp39 := Transcript.\r\t\t\ttmp39\r\t\t\t\tshow: \'Epoche: \';\r\t\t\t\tshow: (tmp31 at: #currentEpoch);\r\t\t\t\tshow: \'/\'.\r\t\t\ttmp34 := Transcript.\r\t\t\ttmp34\r\t\t\t\tshow: (tmp31 at: #finalEpoch);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of good individuals: \'.\r\t\t\ttmp35 := Transcript.\r\t\t\ttmp35\r\t\t\t\tshow: (tmp31 at: #NumberOfGood);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of bad individuals: \'.\r\t\t\ttmp36 := Transcript.\r\t\t\ttmp36\r\t\t\t\tshow: (tmp31 at: #NumberOfBad);\r\t\t\t\tcr.\r\t\t\ttmp37 := Transcript.\r\t\t\ttmp37\r\t\t\t\tshow: \'-----------------------------------------------\';\r\t\t\t\tcr.\r\t\t\t(tmp31 at: #foodSources)\r\t\t\t\tdo: [ :arg4 | \r\t\t\t\t\t| tmp49 tmp50 tmp51 tmp52 |\r\t\t\t\t\ttmp49 := RTEllipse new.\r\t\t\t\t\ttmp49 size: 30.\r\t\t\t\t\ttmp44 := (tmp49 color: (Color green alpha: 0.4)) element.\r\t\t\t\t\ttmp44\r\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\ttmp1 add: tmp44.\r\t\t\t\t\t(arg4 at: #Occupied) = 0\r\t\t\t\t\t\tifTrue: [ tmp2 addNode: tmp44 ].\r\t\t\t\t\t(arg4 at: #Occupied) = 1\r\t\t\t\t\t\tifTrue: [ tmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp50 := RTEllipse new.\r\t\t\t\t\t\t\ttmp50 size: 30.\r\t\t\t\t\t\t\ttmp48 := (tmp50 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp48\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp48.\r\t\t\t\t\t\t\ttmp47 := RTLine edgeFrom: tmp48 to: tmp44.\r\t\t\t\t\t\t\ttmp1 add: tmp47.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp44;\r\t\t\t\t\t\t\t\taddNode: tmp48;\r\t\t\t\t\t\t\t\taddEdge: tmp47 ].\r\t\t\t\t\t(arg4 at: #Occupied) = 2\r\t\t\t\t\t\tifTrue: [ tmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp51 := RTEllipse new.\r\t\t\t\t\t\t\ttmp51 size: 30.\r\t\t\t\t\t\t\ttmp48 := (tmp51 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp48\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp48.\r\t\t\t\t\t\t\ttmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 2) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp52 := RTEllipse new.\r\t\t\t\t\t\t\ttmp52 size: 30.\r\t\t\t\t\t\t\ttmp46 := (tmp52 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp46 translateTo: 5 atRandom @ 5 atRandom.\r\t\t\t\t\t\t\ttmp1 add: tmp46.\r\t\t\t\t\t\t\ttmp47 := RTLine edgeFrom: tmp48 to: tmp44.\r\t\t\t\t\t\t\ttmp45 := RTLine edgeFrom: tmp46 to: tmp44.\r\t\t\t\t\t\t\ttmp1\r\t\t\t\t\t\t\t\tadd: tmp47;\r\t\t\t\t\t\t\t\tadd: tmp45.\r\t\t\t\t\t\t\ttmp2\r\t\t\t\t\t\t\t\taddNode: tmp44;\r\t\t\t\t\t\t\t\taddNode: tmp48;\r\t\t\t\t\t\t\t\taddEdge: tmp47;\r\t\t\t\t\t\t\t\taddNode: tmp46;\r\t\t\t\t\t\t\t\taddEdge: tmp45 ] ].\r\t\t\ttmp1 ]',			#stamp : '',			#package : #''		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SimulationView,				#isMetaSide : false			},			#name : #initView,			#protocol : #accessing,			#sourceCode : 'initView\r\t| tmp1 tmp2 tmp3 tmp5 tmp6 |\r\tself @ RTDraggableView.\r\ttmp1 := RTSpringLayoutStepping new view: self.\r\ttmp1 after: [ self canvas camera focusOnCenter ].\r\tself addAnimation: tmp1.\r\ttmp2 := self canvas.\r\ttmp2\r\t\taddMenu: \'To the end\'\r\t\t\tcallback:\r\t\t\t\t[ | tmp8 tmp9 tmp10 tmp11 tmp12 tmp13 tmp14 tmp15 tmp16 tmp17 tmp18 tmp19 tmp20 tmp22 tmp23 tmp24 tmp25 tmp26 |\r\t\t\ttmp10 := ZnClient new.\r\t\t\ttmp10\r\t\t\t\turl: \'http://localhost:8080/toTheEnd\';\r\t\t\t\tenforceHttpSuccess: true;\r\t\t\t\taccept: ZnMimeType applicationJson;\r\t\t\t\ttimeout: 1000;\r\t\t\t\tcontentReader: [ :arg1 | NeoJSONReader fromString: arg1 contents ].\r\t\t\ttmp8 := tmp10 get.\r\t\t\ttmp6 := tmp3 elements size.\r\t\t\ttmp6 ~= 0\r\t\t\t\tifTrue: [ tmp9 := tmp6 - 1.\r\t\t\t\t\ttmp15 := tmp9.\r\t\t\t\t\ttmp17 := tmp15.\r\t\t\t\t\ttmp18 := tmp17.\r\t\t\t\t\ttmp19 := tmp18.\r\t\t\t\t\ttmp20 := tmp19.\r\t\t\t\t\t1 to: tmp20 do: [ :tmp21 | (tmp3 elements at: tmp6 - tmp21) remove ].\r\t\t\t\t\ttmp3 elements atRandom remove ].\r\t\t\ttmp16 := Transcript.\r\t\t\ttmp16\r\t\t\t\tshow: \'Epoche: \';\r\t\t\t\tshow: (tmp8 at: #currentEpoch);\r\t\t\t\tshow: \'/\'.\r\t\t\ttmp11 := Transcript.\r\t\t\ttmp11\r\t\t\t\tshow: (tmp8 at: #finalEpoch);\r\t\t\t\tcr.\r\t\t\ttmp12 := Transcript.\r\t\t\ttmp12\r\t\t\t\tshow: (tmp8 at: #NumberOfGood);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of bad individuals: \'.\r\t\t\ttmp13 := Transcript.\r\t\t\ttmp13\r\t\t\t\tshow: (tmp8 at: #NumberOfBad);\r\t\t\t\tcr.\r\t\t\ttmp14 := Transcript.\r\t\t\ttmp14\r\t\t\t\tshow: \'-----------------------------------------------\';\r\t\t\t\tcr.\r\t\t\t(tmp8 at: #foodSources)\r\t\t\t\tdo: [ :arg2 | \r\t\t\t\t\t| tmp27 tmp28 tmp29 tmp30 |\r\t\t\t\t\ttmp27 := RTEllipse new.\r\t\t\t\t\ttmp27 size: 30.\r\t\t\t\t\ttmp22 := (tmp27 color: (Color green alpha: 0.4)) element.\r\t\t\t\t\ttmp22\r\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\ttmp3 add: tmp22.\r\t\t\t\t\t(arg2 at: #Occupied) = 0\r\t\t\t\t\t\tifTrue: [ tmp1 addNode: tmp22 ].\r\t\t\t\t\t(arg2 at: #Occupied) = 1\r\t\t\t\t\t\tifTrue: [ tmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp28 := RTEllipse new.\r\t\t\t\t\t\t\ttmp28 size: 30.\r\t\t\t\t\t\t\ttmp23 := (tmp28 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp23\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp3 add: tmp23.\r\t\t\t\t\t\t\ttmp26 := RTLine edgeFrom: tmp23 to: tmp22.\r\t\t\t\t\t\t\ttmp3 add: tmp26.\r\t\t\t\t\t\t\ttmp1\r\t\t\t\t\t\t\t\taddNode: tmp22;\r\t\t\t\t\t\t\t\taddNode: tmp23;\r\t\t\t\t\t\t\t\taddEdge: tmp26 ].\r\t\t\t\t\t(arg2 at: #Occupied) = 2\r\t\t\t\t\t\tifTrue: [ tmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp29 := RTEllipse new.\r\t\t\t\t\t\t\ttmp29 size: 30.\r\t\t\t\t\t\t\ttmp23 := (tmp29 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp23\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp3 add: tmp23.\r\t\t\t\t\t\t\ttmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg2 at: #OccupiedBy) at: 2) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp30 := RTEllipse new.\r\t\t\t\t\t\t\ttmp30 size: 30.\r\t\t\t\t\t\t\ttmp24 := (tmp30 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp24\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 5 atRandom @ 5 atRandom.\r\t\t\t\t\t\t\ttmp3 add: tmp24.\r\t\t\t\t\t\t\ttmp26 := RTLine edgeFrom: tmp23 to: tmp22.\r\t\t\t\t\t\t\ttmp25 := RTLine edgeFrom: tmp24 to: tmp22.\r\t\t\t\t\t\t\ttmp3\r\t\t\t\t\t\t\t\tadd: tmp26;\r\t\t\t\t\t\t\t\tadd: tmp25.\r\t\t\t\t\t\t\ttmp1\r\t\t\t\t\t\t\t\taddNode: tmp22;\r\t\t\t\t\t\t\t\taddNode: tmp23;\r\t\t\t\t\t\t\t\taddEdge: tmp26;\r\t\t\t\t\t\t\t\taddNode: tmp24;\r\t\t\t\t\t\t\t\taddEdge: tmp25 ] ].\r\t\t\ttmp3 signalUpdate ];\r\t\taddMenu: \'Next day\'\r\t\t\tcallback:\r\t\t\t\t[ | tmp32 tmp33 tmp34 tmp35 tmp36 tmp37 tmp38 tmp39 tmp40 tmp41 tmp42 tmp43 tmp44 tmp46 tmp47 tmp48 tmp49 tmp50 |\r\t\t\ttmp34 := ZnClient new.\r\t\t\ttmp34\r\t\t\t\turl: \'http://localhost:8080/nextEpoch\';\r\t\t\t\tenforceHttpSuccess: true;\r\t\t\t\taccept: ZnMimeType applicationJson;\r\t\t\t\tcontentReader: [ :arg3 | NeoJSONReader fromString: arg3 contents ].\r\t\t\ttmp32 := tmp34 get.\r\t\t\ttmp6 := tmp3 elements size.\r\t\t\ttmp6 ~= 0\r\t\t\t\tifTrue: [ tmp33 := tmp6 - 1.\r\t\t\t\t\ttmp39 := tmp33.\r\t\t\t\t\ttmp41 := tmp39.\r\t\t\t\t\ttmp42 := tmp41.\r\t\t\t\t\ttmp43 := tmp42.\r\t\t\t\t\ttmp44 := tmp43.\r\t\t\t\t\t1 to: tmp44 do: [ :tmp45 | (tmp3 elements at: tmp6 - tmp45) remove ].\r\t\t\t\t\ttmp3 elements atRandom remove ].\r\t\t\ttmp40 := Transcript.\r\t\t\ttmp40\r\t\t\t\tshow: \'Epoche: \';\r\t\t\t\tshow: (tmp32 at: #currentEpoch);\r\t\t\t\tshow: \'/\'.\r\t\t\ttmp35 := Transcript.\r\t\t\ttmp35\r\t\t\t\tshow: (tmp32 at: #finalEpoch);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of good individuals: \'.\r\t\t\ttmp36 := Transcript.\r\t\t\ttmp36\r\t\t\t\tshow: (tmp32 at: #NumberOfGood);\r\t\t\t\tcr.\r\t\t\tTranscript show: \'Number of bad individuals: \'.\r\t\t\ttmp37 := Transcript.\r\t\t\ttmp37\r\t\t\t\tshow: (tmp32 at: #NumberOfBad);\r\t\t\t\tcr.\r\t\t\ttmp38 := Transcript.\r\t\t\ttmp38\r\t\t\t\tshow: \'-----------------------------------------------\';\r\t\t\t\tcr.\r\t\t\t(tmp32 at: #foodSources)\r\t\t\t\tdo: [ :arg4 | \r\t\t\t\t\t| tmp51 tmp52 tmp53 tmp54 |\r\t\t\t\t\ttmp51 := RTEllipse new.\r\t\t\t\t\ttmp51 size: 30.\r\t\t\t\t\ttmp47 := (tmp51 color: (Color green alpha: 0.4)) element.\r\t\t\t\t\ttmp47\r\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\ttmp3 add: tmp47.\r\t\t\t\t\t(arg4 at: #Occupied) = 0\r\t\t\t\t\t\tifTrue: [ tmp1 addNode: tmp47 ].\r\t\t\t\t\t(arg4 at: #Occupied) = 1\r\t\t\t\t\t\tifTrue: [ tmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp52 := RTEllipse new.\r\t\t\t\t\t\t\ttmp52 size: 30.\r\t\t\t\t\t\t\ttmp50 := (tmp52 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp50\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\ttmp3 add: tmp50.\r\t\t\t\t\t\t\ttmp48 := RTLine edgeFrom: tmp50 to: tmp47.\r\t\t\t\t\t\t\ttmp3 add: tmp48.\r\t\t\t\t\t\t\ttmp1\r\t\t\t\t\t\t\t\taddNode: tmp47;\r\t\t\t\t\t\t\t\taddNode: tmp50;\r\t\t\t\t\t\t\t\taddEdge: tmp48 ].\r\t\t\t\t\t(arg4 at: #Occupied) = 2\r\t\t\t\t\t\tifTrue: [ | tmp56 |\r\t\t\t\t\t\t\ttmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 1) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp53 := RTEllipse new.\r\t\t\t\t\t\t\ttmp53 size: 30.\r\t\t\t\t\t\t\ttmp50 := (tmp53 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp50\r\t\t\t\t\t\t\t\t@ RTDraggable;\r\t\t\t\t\t\t\t\ttranslateTo: 1 atRandom @ 1 atRandom.\r\t\t\t\t\t\t\tself add: tmp50.\r\t\t\t\t\t\t\ttmp5 := Color blue.\r\t\t\t\t\t\t\t(((arg4 at: #OccupiedBy) at: 2) at: #typeOfIndividual) = 1\r\t\t\t\t\t\t\t\tifTrue: [ tmp5 := Color red ].\r\t\t\t\t\t\t\ttmp54 := RTEllipse new.\r\t\t\t\t\t\t\ttmp54 size: 30.\r\t\t\t\t\t\t\ttmp46 := (tmp54 color: (tmp5 alpha: 0.4)) element.\r\t\t\t\t\t\t\ttmp46 translateTo: 5 atRandom @ 5 atRandom.\r\t\t\t\t\t\t\tself add: tmp46.\r\t\t\t\t\t\t\ttmp48 := RTLine edgeFrom: tmp50 to: tmp47.\r\t\t\t\t\t\t\ttmp49 := RTLine edgeFrom: tmp46 to: tmp47.\r\t\t\t\t\t\t\ttmp56 := self.\r\t\t\t\t\t\t\ttmp56\r\t\t\t\t\t\t\t\tadd: tmp48;\r\t\t\t\t\t\t\t\tadd: tmp49.\r\t\t\t\t\t\t\ttmp1\r\t\t\t\t\t\t\t\taddNode: tmp47;\r\t\t\t\t\t\t\t\taddNode: tmp50;\r\t\t\t\t\t\t\t\taddEdge: tmp48;\r\t\t\t\t\t\t\t\taddNode: tmp46;\r\t\t\t\t\t\t\t\taddEdge: tmp49 ] ].\r\t\t\tself ]',			#stamp : '',			#package : #''		}	}}